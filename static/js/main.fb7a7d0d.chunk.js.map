{"version":3,"sources":["styles/constant.js","images/tree/dataset.svg","images/tree/folder.svg","images/tree/file.svg","utils/graphModel.js","utils/filesHandler.js","App.js","app/mainLayout.js","components/EmptyContainer.js","components/ErrorDialog/ErrorDialog.js","images/upload-icon.svg","images/check.svg","components/FileUploader/UploadSubmit.js","components/FileUploader/UploadView/ProgressBar.js","components/FileUploader/UploadView/Progress.js","images/nft.svg","images/mtl.svg","images/database.svg","components/FileUploader/UploadView/FileExtension.js","images/cancel.svg","images/success.svg","components/FileUploader/UploadView/UploadProgress.js","images/delete.svg","components/FileUploader/UploadView/UploadError.js","components/FileUploader/UploadView/FilesUploading.js","components/FileUploader/Uploader.js","images/url.svg","images/link-green.svg","components/FileUploader/UrlUploader.js","components/FileUploader/UploadTabPanel.js","images/close.svg","components/FileUploader/UploadDialogHeader.js","app/widgets.js","utils/nodesFactory.js","utils/Splinter.js","components/FileUploader/UploadDialog.js","images/toggle-right.svg","images/logo.svg","images/toggle-left.svg","images/search.svg","components/Sidebar/Header.js","images/tree/down.svg","components/Sidebar/TreeView/TreeViewItem.js","components/Sidebar/TreeView/InstancesTreeView.js","components/Sidebar/List.js","images/plus.svg","components/Sidebar/Footer.js","components/Sidebar/Sidebar.js","images/tree/curve.svg","images/tree/linewithradius.svg","images/tree/filled-folder.svg","images/tree/filled-file.svg","images/tree/filled-dataset.svg","theme.js","redux/actions.js","components/GraphViewer/GraphViewer.js","images/filter.svg","components/NodeDetailView/Footers/Footer.js","images/help.svg","components/NodeDetailView/Headers/Header.js","images/nifti.svg","components/NodeDetailView/Headers/FileHeader.js","images/user.svg","components/NodeDetailView/Headers/PersonHeader.js","images/dataset.svg","components/NodeDetailView/Headers/DatasetHeader.js","images/volume.svg","components/NodeDetailView/Headers/ProtocolHeader.js","components/NodeDetailView/Headers/CollectionHeader.js","components/NodeDetailView/Details/Views/SimpleLabelValue.js","components/NodeDetailView/Details/Details.js","images/link.svg","components/NodeDetailView/Details/Views/Links.js","components/NodeDetailView/Details/Views/SimpleChip.js","components/NodeDetailView/Details/FileDetails.js","components/NodeDetailView/Details/PersonDetails.js","components/NodeDetailView/Details/utils.js","components/NodeDetailView/Details/SampleDetails.js","components/NodeDetailView/Details/DatasetDetails.js","components/NodeDetailView/Details/SubjectDetails.js","components/NodeDetailView/Details/ProtocolDetails.js","components/NodeDetailView/Details/CollectionDetails.js","components/NodeDetailView/factory.js","images/divider.svg","components/NodeDetailView/Details/Views/Breadcrumbs.js","app/componentMap.js","components/NodeDetailView/NodeDetailView.js","redux/store.js","redux/initialState.js","redux/middleware.js","app/layout.js","serviceWorker.js","index.js","constants.js"],"names":["vars","fontFamily","primaryColor","primaryColorHover","outlinedButtonHover","secondaryColor","searchBg","primaryBgColor","primaryTextColor","lightBorderColor","noInstanceColor","inputTextColor","iconButtonHover","radius","gutter","whiteColor","sidebarIconColor","primaryTransition","errorColor","progressErrorColor","barSuccessColor","tabsBgColor","progressBgPrimary","dropzoneBorderColor","dropzoneTextColor","inputFocusShadow","successInputFocusShadow","placeHolderColor","dialogShadow","tabsBorderColor","dialogBodyBgColor","sideBarTextColor","chipBgColor","dataset","matlab","nifti","volume","sideBarLabelColor","treeBorderColor","scrollbarBg","type_key","rdfTypes","typesModel","ORCID","awards","collection","contributor","sample","subject","Protocol","axios","require","FileHandler","path","callback","progressCallback","undefined","reader","FileReader","onload","response","target","result","onprogress","data","lengthComputable","progress","parseInt","loaded","total","readAsText","url","get","crossDomain","responseType","onDownloadProgress","progressEvent","then","catch","error","console","log","module","exports","hot","useState","openDialog","setOpenDialog","datasets","useSelector","state","sdsState","error_message","theme","display","className","length","open","handleClose","useStyles","makeStyles","layoutContainer","position","width","height","MainLayout","classes","store","useStore","LayoutManager","setComponent","useEffect","myManager","getLayoutManagerInstance","model","visitNodes","node","level","setEventListener","event","CustomEvent","detail","document","dispatchEvent","getComponent","EmptyContainer","props","variant","IMPORT_TEXT","color","onClick","ErrorDialog","dispatch","useDispatch","onClose","triggerError","UploadSubmit","Button","fullWidth","disableElevation","src","CHECK","alt","ErrorLinearProgress","withStyles","createStyles","colorPrimary","backgroundColor","barColorPrimary","LinearProgress","ProgressBar","Progress","file","errors","Box","Typography","name","component","message","value","FileExtension","NFT","MTL","DATABASE","uploadFile","onProgress","onUpload","get_local_file","fileData","UploadProgress","onDelete","setProgress","a","upload","CANCEL","style","cursor","SUCCESS","UploadError","DELETE","FilesUploading","files","map","fileWrapper","totalFiles","id","Uploader","handleDone","setFiles","loadedFiles","setLoadedFiles","onDrop","accept","updatedFiles","Math","random","curr","nodeRef","React","useRef","onChange","e","showPreviewsInDropzone","accFiles","acceptedFiles","FILE_UPLOAD_PARAMS","acceptedFileExtensions","maxFileSize","onDropRejected","rejFiles","showAlerts","ref","Icon","UploadIcon","dropzoneText","filesLimit","maxFiles","filter","fw","UrlUploader","loader","setLoader","setUrl","fileDownloaded","setFileDownloaded","type","FormControl","OutlinedInput","placeholder","startAdornment","InputAdornment","LINK_GREEN","LINK","endAdornment","disabled","fileHandler","fileHandler2","fileExt","split","pop","item","get_remote_file","urls","replace","base_url","shift","getJsonURL","CircularProgress","size","TabPanel","children","index","other","role","hidden","a11yProps","UploadDialogHeader","handleChange","CLOSE","Tabs","Tab","label","NodeViewWidget","WidgetStatus","ACTIVE","panelName","enableClose","enableRename","enableDrag","status","createImage","img","Image","File","key","extension","String","image","Uknown","extractProperties","ttlTypes","properties","property","type_property","predicate","iri","attributes","push","identifier","Collection","Contributor","firstName","middleName","lastName","Award","namesArray","Dataset","Sample","Subject","Person","Unknown","NodesFactory","this","createNode","typed_node","N3","Splinter","jsonFile","turtleFile","filterNode","basename","includes","factory","types","jsonData","levelsMap","turtleData","tree","nodes","edges","root_id","tree_map","proxies_map","forced_edges","forced_nodes","tree_parents_map","dataset_id","processDatasetId","Store","Map","JSON","parse","that","Promise","resolve","reject","Parser","err","quad","prefixes","addQuad","prefix","processDataset","cleanLinks","self","forEach","link","find","l","source","b","neighbors","links","maxLevel","Object","keys","reduce","nodeSpace","furthestLeft","ceil","positionsMap","levelsMapKeys","sort","relativePath","localeCompare","parent","reverse","n","neighbor","xPos","radialVariant","hierarchyVariant","extractTurtle","processJSON","extractJson","initialiseNodesEdges","processTurtle","create_graph","create_tree","mergeData","generateData","typeFound","unknown","owl","rdfType","NamedIndividual","ontology","sparc","sparcType","set","proxies","tree_reference","children_counter","proxy","Util","isBlankNode","graph_node","object","datatype","found","indexOf","update_node","dataset_node","ontology_node","get_type","typedNode","delete","concat","temp_edges","subjects","subject_key","protocols","protocols_key","contributors","contributors_key","temp","target_node","source_node","array","derivedFrom","getSubjects","build_node","entries","isLiteral","link_nodes","cast_nodes","organise_nodes","leaf","uri_api","parent_id","remote_id","hasFolderAboutIt","child","linkToNode","new_node","buildNodeFromJson","node_id","dataset_relative_path","size_bytes","mimetype","updated","timestamp_updated","tree_root","generateLeaf","build_leaf","Array","from","tree_node","graph_reference","every","fix_links","identify_childless_parents","newChild","items","text","findReference","reference","UploadDialog","setValue","_json","_turtle","splinter","getDatasetId","getGraph","getTree","_dataset","graph","addDataset","addWidget","substring","config","graph_id","Dialog","newValue","UploadTabPanel","SidebarHeader","expand","setExpand","setSearchTerm","searchTerm","Logo","IconButton","ToggleLeft","ToggleRight","FilledInput","disableUnderline","Search","StyledTreeItem","labelText","labelInfo","labelIcon","iconClass","onNodeSelect","TreeItem","nodeId","preventDefault","DOWN","InstancesTreeView","stringify","window","nodeSelected","instance_selected","setNodes","setItems","widgets","selectInstance","TREE_SOURCE","layoutActions","globalId","GRAPH_SOURCE","element","matchingTitle","lowercaseSearch","toLowerCase","res","matchSearch","o","obj","recurse","current","nestedLoop","searchTree","treeRef","createRef","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","onNodeToggle","nodeIds","original","newPath","getTreeItemsFromData","treeItems","treeItemData","itemLength","labelProps","DATASET","FOLDER","FILE","SidebarContent","SidebarFooter","Plus","Sidebar","progressErrorBg","createTheme","typography","h3","fontWeight","fontSize","lineHeight","overrides","MuiBreadcrumbs","root","marginTop","ol","separator","marginLeft","marginRight","li","letterSpacing","MuiChip","borderRadius","alignItems","padding","MuiCircularProgress","MuiLinearProgress","colorSecondary","barColorSecondary","MuiDropzoneArea","borderWidth","borderColor","minHeight","justifyContent","flexDirection","margin","order","MuiOutlinedInput","boxShadow","notchedOutline","input","adornedStart","paddingLeft","adornedEnd","paddingRight","MuiDialog","paperWidthSm","MuiTabs","borderTop","borderBottom","background","MuiTab","minWidth","textTransform","opacity","textAlign","MuiFilledInput","paddingTop","paddingBottom","MuiIconButton","MuiButton","containedPrimary","outlinedPrimary","MuiCssBaseline","boxSizing","overflow","scrollbarWidth","marginBottom","flexShrink","transition","flexWrap","maxWidth","flexGrow","content","right","bottom","zIndex","border","backgroundImage","FILLED_DATASET","FILLED_FILE","FILLED_FOLDER","transform","left","top","LINE","backgroundRepeat","CURVE","textOverflow","whiteSpace","borderRight","borderTopRightRadius","borderBottomRightRadius","maxHeight","wordWrap","ADD_DATASET","DELETE_DATASET","SELECT_INSTANCE","TRIGGER_ERROR","deleteDataset","instance","ONE_SECOND","GRAPH_COLORS","linkHover","hoverRect","textHoverRect","textHover","textColor","TOP_DOWN","layout","maxNodesLevel","RADIAL_OUT","roundRect","ctx","x","y","alpha","globalAlpha","fillStyle","beginPath","moveTo","arcTo","closePath","fill","GraphViewer","graphRef","hoverNode","setHoverNode","selectedNode","setSelectedNode","Set","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","selectedLayout","setSelectedLayout","layoutAnchorEl","setLayoutAnchorEl","cameraPosition","setCameraPosition","Boolean","loading","setLoading","handleLayoutClose","handleLayoutChange","handleNodeRightClick","ggv","centerAt","zoom","resetCamera","zoomToFit","center","setTimeout","d3Force","d3","strength","paintNode","useCallback","nodeImageSize","hoverRectDimensions","hoverRectPosition","textHoverPosition","drawImage","font","textBaseline","nodeName","substr","textProps","hoverRec","hoverRectBorderRadius","fillText","d2","warmupTicks","cooldownTicks","onEngineStop","linkColor","has","linkWidth","forceChargeStrength","collideSize","linkDirectionalParticles","linkCurvature","curve","fx","linkDirectionalParticleWidth","linkCanvasObjectMode","onLinkHover","clear","add","nodeCanvasObject","nodeCanvasObjectMode","nodeVal","fy","onNodeHover","onNodeClick","handleNodeLeftClick","onNodeRightClick","dagMode","onDagError","loopNodeIds","enableNodeDrag","enableZoomPanInteraction","enablePointerInteraction","controls","currentTarget","Menu","anchorEl","keepMounted","MenuItem","selected","zoomIn","zoomOut","NodeFooter","FILTER","PersonHeader","headingStyle","title","HELP","FileHeader","PERSON","DatasetHeader","ProtocolHeader","VOLUME","CollectionHeader","SimpleLabelValue","heading","UnknownDetails","idDetails","detailsLabel","toString","DetailLinks","href","Link","LINKICON","SimpleChip","chips","Chip","FileDetails","latestUpdate","Date","DETAILS_LIST","isAbout","uri_human","Links","checksums","hex","cypher","List","ListItemText","hasUriHuman","PersonDetails","iterateSimpleValue","SampleDetails","hasAssignedGroup","hasDerivedInformationAsParticipant","hasDigitalArtifactThatIsAboutIt","participantInPerformanceOf","wasDerivedFromSubject","wasExtractedFromAnatomicalRegion","DatasetDetails","contactPerson","hasResponsiblePrincipalInvestigator","user","designation","USER","hasContactPerson","errorIndex","hasDatasetTemplateSchemaVersion","hasExperimentalModality","protocolEmploysTechnique","SubjectDetails","populateAttributeArray","prop","species","strains","assignedGroups","subjectSpecies","subjectStrain","age","hasAgeCategory","biologicalSex","specimenHasIdentifier","ProtocolDetails","protocolHasNumberOfSteps","CollectionDetails","nodeDetail","Details","DetailsFactory","createDetails","details","HeaderBreadcrumbs","goToLink","getElementById","scrollIntoView","behavior","Breadcrumbs","DIVIDER","pages","page","componentMap","otherDetails","nodeDetails","singleNode","getDetail","latestNodeVisited","close","getHeader","reducers","action","Actions","ids","slice","LayoutActions","SET_LAYOUT","createStore","all_tree","next","REMOVE_WIDGET","getState","baseLayout","global","tabEnableClose","tabSetHeaderHeight","tabSetTabStripHeight","enableEdgeDock","sideBorders","location","hostname","match","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb7a7d0d.chunk.js","sourcesContent":["const vars = {\n  fontFamily: 'Inter, sans-serif',\n  primaryColor: '#3779E1',\n  primaryColorHover: '#2763C1',\n  outlinedButtonHover: '#E4EEFF',\n  secondaryColor: '#222739',\n  searchBg: 'rgba(255, 255, 255, 0.1)',\n  primaryBgColor: '#F5F7FB',\n  primaryTextColor: '#2E3A59',\n  lightBorderColor: 'rgba(255, 255, 255, 0.1)',\n  noInstanceColor: 'rgba(255, 255, 255, 0.6)',\n  inputTextColor: 'rgba(255, 255, 255, 0.8)',\n  iconButtonHover: 'rgba(255, 255, 255, 0.2)',\n  radius: 8,\n  gutter: 16,\n  whiteColor: '#FFFFFF',\n  sidebarIconColor: 'rgba(221, 221, 221, 0.8)',\n  primaryTransition: 'all ease-in-out .3s',\n  errorColor: '#ED745D',\n  progressErrorColor: 'rgba(237, 116, 93, 0.1)',\n  barSuccessColor: '#6FC386',\n  tabsBgColor: '#F5F8FD',\n  progressBgPrimary: 'rgba(55, 121, 225, 0.1)',\n  dropzoneBorderColor: 'rgba(55, 121, 225, 0.3)',\n  dropzoneTextColor: 'rgba(46, 58, 89, 0.3)',\n  inputFocusShadow: 'rgba(55, 121, 225, 0.1)',\n  successInputFocusShadow: 'rgba(111, 195, 134, 0.1)',\n  placeHolderColor: 'rgba(46, 58, 89, 0.6)',\n  dialogShadow: 'rgba(0, 0, 0, 0.1)',\n  tabsBorderColor: 'rgba(0, 0, 0, 0.1)',\n  dialogBodyBgColor: 'rgba(55, 121, 225, 0.05)',\n  sideBarTextColor: 'rgba(46, 58, 89, 0.8)',\n  chipBgColor: 'rgba(46, 58, 89, 0.05)',\n  dataset: '#3779E1',\n  matlab: '#6FC386',\n  nifti: '#7747F6',\n  volume: '#3779E1',\n  sideBarLabelColor: 'rgba(46, 58, 89, 0.4)',\n  treeBorderColor: '#4E5261',\n  scrollbarBg: 'rgba(0, 0, 0, 0.24)',\n};\n\nexport default vars;\n","export default __webpack_public_path__ + \"static/media/dataset.3c0498c8.svg\";","export default __webpack_public_path__ + \"static/media/folder.d55ab3f1.svg\";","export default __webpack_public_path__ + \"static/media/file.4236de94.svg\";","export const type_key = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\nexport const rdfTypes = {\n    \"Ontology\": {\n        \"image\": \"./images/graph/database.svg\",\n        \"key\": \"Ontology\",\n        \"properties\": []\n    },\n    \"Award\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Award\",\n        \"properties\": []\n    },\n    \"Collection\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Collection\",\n        \"properties\": []\n    },\n    \"Dataset\": {\n        \"image\": \"./images/graph/dataset.svg\",\n        \"key\": \"Dataset\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"isAbout\",\n                \"key\": \"\",\n                \"property\": \"isAbout\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"contentsWereUpdatedAtTime\",\n                \"property\": \"latestUpdate\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"errorIndex\",\n                \"property\": \"errorIndex\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAwardNumber\",\n                \"property\": \"hasAwardNumber\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasContactPerson\",\n                \"property\": \"hasContactPerson\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDatasetTemplateSchemaVersion\",\n                \"property\": \"hasDatasetTemplateSchemaVersion\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasExperimentalModality\",\n                \"property\": \"hasExperimentalModality\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasResponsiblePrincipalInvestigator\",\n                \"property\": \"hasResponsiblePrincipalInvestigator\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasUriHuman\",\n                \"property\": \"hasUriHuman\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolEmploysTechnique\",\n                \"property\": \"protocolEmploysTechnique\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"File\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"File\",\n        \"properties\": []\n    },\n    \"Subject\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Subject\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfSpecies\",\n                \"property\": \"subjectSpecies\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"animalSubjectIsOfStrain\",\n                \"property\": \"subjectStrain\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAge\",\n                \"property\": \"age\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAgeCategory\",\n                \"property\": \"hasAgeCategory\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasBiologicalSex\",\n                \"property\": \"biologicalSex\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"specimenHasIdentifier\",\n                \"property\": \"specimenHasIdentifier\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"to be filled\"\n            }\n    ]\n    },\n    \"Sample\": {\n        \"image\": \"./images/graph/folder.svg\",\n        \"key\": \"Sample\",\n        \"properties\": [\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasFolderAboutIt\",\n                \"property\": \"hasFolderAboutIt\",\n                \"label\": \"Folder that contains collection and files about the sample\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"wasDerivedFromSubject\",\n                \"property\": \"derivedFrom\",\n                \"label\": \"Derived from the subject\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"localId\",\n                \"property\": \"identifier\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasAssignedGroup\",\n                \"property\": \"hasAssignedGroup\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDerivedInformationAsParticipant\",\n                \"property\": \"hasDerivedInformationAsParticipant\",\n                \"label\": \"to be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"property\": \"hasDigitalArtifactThatIsAboutIt\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"participantInPerformanceOf\",\n                \"property\": \"participantInPerformanceOf\",\n                \"label\": \"Unique instance identifier\"\n            },\n            {\n                \"type\": \"TEMPRAW\",\n                \"key\": \"wasExtractedFromAnatomicalRegion\",\n                \"property\": \"wasExtractedFromAnatomicalRegion\",\n                \"label\": \"Unique instance identifier\"\n            }\n        ]\n    },\n    \"Person\": {\n        \"image\": \"./images/graph/user.svg\",\n        \"key\": \"Person\",\n        \"properties\": [\n            {\n                \"type\": \"sparc\",\n                \"key\": \"firstName\",\n                \"property\": \"firstName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"sparc\",\n                \"key\": \"lastName\",\n                \"property\": \"lastName\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"middleName\",\n                \"property\": \"middleName\",\n                \"label\": \"To be filled\"\n            },\n        ]\n    },\n    \"Protocol\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Protocol\",\n        \"properties\": [\n            {\n                \"type\": \"rdfs\",\n                \"key\": \"label\",\n                \"property\": \"label\",\n                \"label\": \"To be filled\"\n            },\n            {\n                \"type\": \"TEMP\",\n                \"key\": \"protocolHasNumberOfSteps\",\n                \"property\": \"protocolHasNumberOfSteps\",\n                \"label\": \"To be filled\"\n            }\n        ]\n    },\n    \"Unknown\": {\n        \"image\": \"./images/graph/files/default_file.svg\",\n        \"key\": \"Unknown\",\n        \"properties\": []\n    }\n};\n\n\nexport const typesModel = {\n    \"NamedIndividual\": {\n        ORCID: {\n            \"type\": \"Person\"\n        },\n        awards: {\n            \"type\": \"Award\"\n        },\n        collection: {\n            \"type\": \"Collection\"\n        },\n        contributor: {\n            \"type\": \"Person\"\n        },\n        dataset: {\n            \"type\": \"Dataset\"\n        },\n        sample: {\n            \"type\": \"Sample\"\n        },\n        subject: {\n            \"type\": \"Subject\",\n        }\n    },\n    \"sparc\": {\n        Protocol: {\n            \"type\": \"Protocol\",\n            \"length\": 999\n        },\n    },\n    \"ontology\": {\n        \"type\": \"Ontology\",\n        \"length\": 999\n    },\n    \"unknown\": {\n        \"type\": \"Unknown\",\n        \"length\": 0\n    }\n};\n","const axios = require('axios');\n\nclass FileHandler {\n\n    get_local_file(path, callback, progressCallback) {\n        if (path === undefined)\n            return undefined;\n\n        const reader = new FileReader();\n\n        reader.onload = function(response) {\n            callback(response.target.result)\n        };\n\n        reader.onprogress = function (data) {\n            if (data.lengthComputable) {\n                var progress = parseInt((data.loaded / data.total) * 100, 10);\n                progressCallback(progress);\n            }\n        };\n\n        reader.readAsText(path);\n    }\n\n    get_remote_file(url, callback) {\n        axios.get(url, {\n            crossDomain: true,\n            responseType: \"stream\",\n            onDownloadProgress: (progressEvent) => {\n                // Progress callback to be used for the loader.\n            }\n        }).then(response => {\n            callback(url, response.data);\n        }).catch(error => {\n            console.log(error);\n            callback(undefined);\n        });\n    }\n}\n\nmodule.exports = FileHandler\n","import './flexlayout.css';\nimport theme from './theme';\nimport { useState } from 'react';\nimport { hot } from 'react-hot-loader';\nimport Box from '@material-ui/core/Box';\nimport MainLayout from './app/mainLayout';\nimport { useSelector } from 'react-redux';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport EmptyContainer from './components/EmptyContainer';\nimport ErrorDialog from './components/ErrorDialog/ErrorDialog';\nimport UploadDialog from './components/FileUploader/UploadDialog';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\n\nconst App = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const datasets = useSelector(state => state.sdsState.datasets);\n  const error_message = useSelector(state => state.sdsState.error_message);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" className='main-structure'>\n        <Sidebar openDialog={openDialog} setOpenDialog={setOpenDialog} />\n        <Box className={'content full-round'}>\n          { datasets.length > 0\n            ? <MainLayout />\n            : <EmptyContainer\n                openDialog={openDialog}\n                setOpenDialog={setOpenDialog}\n              />\n          }\n        </Box>\n      </Box>\n\n      <UploadDialog\n        open={openDialog}\n        handleClose={() => setOpenDialog(false)}\n      />\n\n      <ErrorDialog\n        open={error_message !== null ? true : false}\n        error_message={error_message}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default hot(module)(App);\n","import { useStore } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getLayoutManagerInstance } from \"@metacell/geppetto-meta-client/common/layout/LayoutManager\";\n\nconst useStyles = makeStyles({\n    layoutContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n});\n\n/**\n * The component that renders the FlexLayout component of the LayoutManager.\n */\nconst MainLayout = () => {\n    const classes = useStyles();\n    const store = useStore();\n    const [LayoutManager, setComponent] = useState(undefined);\n\n    useEffect(() => {\n        // Workaround because getLayoutManagerInstance\n        // is undefined when calling it in global scope\n        // Need to wait until store is ready ...\n        if (LayoutManager === undefined) {\n            const myManager = getLayoutManagerInstance();\n\n            myManager.model.visitNodes((node, level) => {\n                node.setEventListener(\"resize\", (node) => {\n                    const event = new CustomEvent('nodeResized', {\n                        detail: node\n                    });\n                    document.dispatchEvent(event);\n\n                });\n            });\n\n            if (myManager) {\n                setComponent(myManager.getComponent());\n            }\n        }\n    }, [store, LayoutManager])\n\n    return (\n        <div className={classes.layoutContainer}>\n            {LayoutManager === undefined ? <CircularProgress /> : <LayoutManager />}\n        </div>\n    );\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport { Box, Typography, Button } from '@material-ui/core';\nimport { IMPORT_TEXT } from '../constants';\n\nconst EmptyContainer = (props) => {\n  return (\n    <Box className='MuiBox-empty'>\n      <Typography variant='h3'>{IMPORT_TEXT} to start.</Typography>\n      <Button\n        variant='outlined'\n        color='primary'\n        onClick={() => props.setOpenDialog(true)}\n      >\n        + {IMPORT_TEXT}\n      </Button>\n    </Box>\n  );\n};\nexport default EmptyContainer;\n\n","import React from 'react';\nimport { Dialog, Box, Typography } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { triggerError } from '../../redux/actions';\n\nconst ErrorDialog = (props) => {\n    const { open, error_message } = props;\n    const dispatch = useDispatch()\n\n\n    const handleClose = () => {\n        dispatch(triggerError(null));\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose}>\n            <Box className='dialog_header'>\n                <Typography variant='h3'> Generic Error Message</Typography>\n            </Box>\n\n            <Box className='dialog_body'>\n                <Typography variant='h8'> {error_message} </Typography>\n            </Box>\n        </Dialog>\n    );\n};\n\nexport default ErrorDialog;\n","export default __webpack_public_path__ + \"static/media/upload-icon.5d0c29ff.svg\";","export default __webpack_public_path__ + \"static/media/check.2d613265.svg\";","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CHECK from '../../images/check.svg';\n\nconst UploadSubmit = ({ handleClose }) => {\n  return (\n    <Button\n      variant='contained'\n      fullWidth\n      disableElevation\n      color='primary'\n      onClick={handleClose}\n    >\n      <img src={CHECK} alt='Check' />\n      Done\n    </Button>\n  )\n}\n\nexport default UploadSubmit;\n","import { createStyles, LinearProgress, withStyles } from '@material-ui/core';\nimport vars from '../../../styles/constant';\n\nconst ErrorLinearProgress = withStyles(() =>\n  createStyles({\n    colorPrimary: {\n      backgroundColor: vars.progressErrorColor,\n    },\n    barColorPrimary: {\n      backgroundColor: vars.errorColor\n    },\n  }),\n)(LinearProgress);\n\nconst ProgressBar = (props) => props.error ? (\n  <ErrorLinearProgress variant='determinate' {...props} />\n) : (\n  <LinearProgress variant='determinate' {...props} />\n);\n\nexport default ProgressBar;\n\n\n","import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport ProgressBar from './ProgressBar';\n\nconst Progress = (props) => {\n  const { progress, file, errors=[] } = props;\n  return (\n    <Box className='wrap'>\n      <Typography>{file?.name}</Typography>\n      {\n        errors.length > 0 ? (\n          <>\n            <Typography component='strong'>{errors[0]?.message}</Typography>\n            <ProgressBar value={20} error={true} />\n          </>\n        ) : (\n          progress < 100 ? (\n            <>\n              <Typography component='span'>{progress}%</Typography>\n              <ProgressBar value={progress} />\n            </>\n          ) : (\n            <>\n              <Typography component='strong'>{progress}%</Typography>\n              <ProgressBar value={progress} color='secondary' />\n            </>\n          )\n        )\n      }\n    </Box>\n  )\n}\nexport default Progress;\n","export default __webpack_public_path__ + \"static/media/nft.b55f8c49.svg\";","export default __webpack_public_path__ + \"static/media/mtl.4967134b.svg\";","export default __webpack_public_path__ + \"static/media/database.df7b5a81.svg\";","import React from 'react';\nimport NFT from '../../../images/nft.svg';\nimport MTL from '../../../images/mtl.svg';\nimport DATABASE from '../../../images/database.svg';\n\nexport default function FileExtension({ src }) {\n  return (\n    <img src={src === 'NFT' ? NFT : src === 'MTL' ? MTL : DATABASE} alt={src} />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/cancel.285b834a.svg\";","export default __webpack_public_path__ + \"static/media/success.5ab945c8.svg\";","import { Box } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\nimport CANCEL from '../../../images/cancel.svg';\nimport SUCCESS from '../../../images/success.svg';\nconst FileHandler = require('../../../utils/filesHandler');\n\nconst uploadFile = (file, onProgress, onUpload) => {\n  const fileHandler = new FileHandler();\n  const callback = fileData => {\n    onUpload(file, fileData)\n  }\n  fileHandler.get_local_file(file, callback, onProgress);\n}\n\nexport function UploadProgress({ file, onDelete, onUpload }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    async function upload() {\n      uploadFile(file, setProgress, onUpload);\n    }\n    upload();\n  }, []);\n\n  return (\n    <Box className='uploaded-files_row'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'MTL'} />\n      <Progress file={file} progress={progress} />\n      {progress < 100 ? (\n        <img\n          src={CANCEL}\n          onClick={() => onDelete(file)}\n          width='24'\n          style={{ cursor: 'pointer' }}\n          alt='Cancel'\n        />\n        ) : (\n          <img src={SUCCESS} width='24' alt='SUCCESS' />\n        )\n      }\n    </Box>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/delete.6b54b734.svg\";","import { Box } from '@material-ui/core';\nimport React from 'react';\nimport DELETE from '../../../images/delete.svg';\nimport Progress from './Progress';\nimport FileExtension from './FileExtension';\n\nexport function UploadError({ file, onDelete, errors }) {\n  return (\n    <Box className='uploaded-files_row error'>\n      {/* Needs to be updated according to the file uploaded */}\n      <FileExtension src={'NFT'} />\n      <Progress file={file} errors={errors} />\n      <img\n        src={DELETE}\n        onClick={() => onDelete(file)}\n        width='24'\n        style={{ cursor: 'pointer' }}\n        alt='DELETE'\n      />\n    </Box>\n  );\n}\n\n","import { Box, Typography } from '@material-ui/core';\nimport { UploadProgress } from './UploadProgress';\nimport { UploadError } from './UploadError';\n\nexport function FilesUploading({ files, onDelete, onUpload }) {\n  return (\n    <Box className='uploaded-files'>\n      <Typography component='h3'>Uploaded files</Typography>\n      {files.map((fileWrapper) => (\n        <Box key={fileWrapper.id}>\n          {fileWrapper.errors.length ? (\n            <UploadError\n              file={fileWrapper.file}\n              errors={fileWrapper.errors}\n              onDelete={onDelete}\n            />\n          ) : (\n            <UploadProgress\n              onDelete={onDelete}\n              onUpload={onUpload}\n              file={fileWrapper.file}\n              totalFiles={files.length}\n            />\n          )}\n        </Box>\n      ))}\n    </Box>\n  )\n};\n","import React, { useState } from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport UploadIcon from '../../images/upload-icon.svg';\nimport UploadSubmit from './UploadSubmit';\nimport  { FilesUploading } from './UploadView/FilesUploading';\nimport { FILE_UPLOAD_PARAMS } from '../../constants';\n\nconst Uploader = ({ handleClose, handleDone }) => {\n  const [files, setFiles] = useState([]);\n  const [loadedFiles, setLoadedFiles] = useState(0);\n\n  const handleChange = (files) => {\n  };\n\n  const onUpload = (file, data) => {\n    setLoadedFiles((loadedFiles) =>  loadedFiles + 1);\n    setFiles((curr) =>\n      curr.map((fw) => {\n        if (fw.file === file) {\n          return { ...fw, data };\n        }\n        return fw;\n      }),\n    );\n  }\n\n  const onDelete = (file)  => setFiles((curr) => curr.filter((fw) => fw.file !== file));\n\n  const onDrop = (files, accept = true) => {\n    const updatedFiles = files.map((file) => ({\n      file,\n      errors: accept ? [] : [{ message: 'Error: File is too large' }],\n      id: Math.random(),\n    }));\n    setFiles((curr) => [...curr, ...updatedFiles]);\n  };\n\n  const nodeRef = React.useRef('dialog');\n\n  const DropzoneUploadIcon = () => <img src={UploadIcon} alt=\"upload\" />\n\n  return (\n    <>\n      <DropzoneArea\n        onChange={(e) => handleChange(e)}\n        showPreviewsInDropzone={false}\n        onDrop={(accFiles) => onDrop(accFiles)}\n        acceptedFiles={FILE_UPLOAD_PARAMS.acceptedFileExtensions}\n        maxFileSize={FILE_UPLOAD_PARAMS.maxFileSize}\n        onDropRejected={(rejFiles) => onDrop(rejFiles, false)}\n        showAlerts={false}\n        ref={nodeRef}\n        Icon={DropzoneUploadIcon}\n        dropzoneText={'Drag & Drop your files here'}\n        filesLimit={FILE_UPLOAD_PARAMS.maxFiles}\n      />\n\n      {files && files.length ? (\n        <FilesUploading files={files} onDelete={onDelete} onUpload={onUpload} />\n      ): null }\n\n      {loadedFiles === files.length && loadedFiles !== 0 && (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      )}\n    </>\n  );\n};\n\nexport default Uploader;\n","export default __webpack_public_path__ + \"static/media/url.8265b8f5.svg\";","export default __webpack_public_path__ + \"static/media/link-green.8889c463.svg\";","import React, { useState, useEffect } from 'react';\nimport {\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\nimport LINK from '../../images/url.svg';\nimport LINK_GREEN from '../../images/link-green.svg';\nimport CANCEL from '../../images/cancel.svg';\nimport UploadSubmit from './UploadSubmit';\n\nconst FileHandler = require('../../utils/filesHandler');\n\nconst UrlUploader = ({ handleClose, handleDone }) => {\n  const [loader, setLoader] = useState(false);\n  const [url, setUrl] = useState('');\n  const [fileDownloaded, setFileDownloaded] = useState(false);\n  const [files, setFiles] = useState([\n    {\n      id: \"ttl\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"ttl\",\n        type: \"text/turtle\"\n      }\n    },\n    {\n      id: \"json\",\n      url: undefined,\n      data: undefined,\n      file: {\n        name: \"json\",\n        type: \"application/json\"\n      }\n    }\n  ]);\n\n  const onUpload = (url, data) => {\n    var fileExt = url.split('.').pop();\n\n    setFiles((curr) =>\n      curr.map((item) => {\n        if (item.id === fileExt && data !== undefined) {\n          return { ...item, url, data };\n        }\n        return item;\n      }),\n    );\n  };\n\n  const getJsonURL = url => {\n    var urls = url.split('/');\n    var dataset = urls.pop().replace('N%3Adataset%3A', '').replace('.ttl', '');\n    var base_url = urls.shift();\n    urls.pop();\n    urls.map(item => {\n      base_url = base_url + '/' + item;\n      return item;\n    })\n    var json_url = base_url + '/path-metadata/' + dataset + '/LATEST_RUN/path-metadata.json'\n    return json_url\n  }\n\n  const uploadFile = () => {\n    const fileHandler = new FileHandler();\n    const fileHandler2 = new FileHandler();\n    const callback = (url, fileData) => {\n      onUpload(url, fileData);\n    };\n    setLoader(true);\n    fileHandler.get_remote_file(url, callback);\n    fileHandler2.get_remote_file(getJsonURL(url), callback);\n  };\n\n  const removeUrl = () => {\n    setUrl('');\n    setFileDownloaded(false);\n  };\n\n  useEffect(() => {\n    if (loader && !fileDownloaded) {\n      if (files[0].data !== undefined && files[1].data !== undefined) {\n        setLoader(false);\n        setFileDownloaded(true);\n      }\n    }\n  }, [loader, fileDownloaded, files] );\n\n  return (\n    <>\n      <FormControl variant='filled' fullWidth>\n        <OutlinedInput\n          id='url-uploader'\n          placeholder='Dataset URL'\n          className={fileDownloaded ? 'field-success' : ''}\n          startAdornment={\n            <InputAdornment position='start'>\n              <img src={fileDownloaded ? LINK_GREEN : LINK} alt='Link' />\n            </InputAdornment>\n          }\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          endAdornment={\n            url !== '' ? (\n              <InputAdornment position='end' onClick={removeUrl}>\n                <img src={CANCEL} alt='CANCEL' />\n              </InputAdornment>\n            ) : null\n          }\n        />\n      </FormControl>\n\n      {fileDownloaded ? (\n        <UploadSubmit handleClose={() => {handleDone(files)}} />\n      ) : (\n        <Button\n          variant='contained'\n          fullWidth\n          disabled={url === ''}\n          disableElevation\n          color='primary'\n          onClick={uploadFile}\n        >\n          {loader ? <CircularProgress size={16} color={'primary'} /> : 'Load'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UrlUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      className='tab-content'\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default TabPanel;\n","export default __webpack_public_path__ + \"static/media/close.51de2817.svg\";","import React from 'react';\nimport { Typography, Tabs, Tab } from '@material-ui/core';\nimport CLOSE from '../../images/close.svg';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst UploadDialogHeader = (props) => {\n  const { value, handleChange, handleClose } = props;\n\n  return (\n    <>\n      <img src={CLOSE} onClick={handleClose} alt='Close' />\n      <Typography component='h3'>Upload your dataset</Typography>\n\n      <Tabs\n        className='rounded'\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n      >\n        <Tab className='rounded' label='Local System' {...a11yProps(0)} />\n        <Tab className='rounded' label='From a URL' {...a11yProps(1)} />\n      </Tabs>\n    </>\n  );\n}\n\nexport default UploadDialogHeader;\n","import { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nexport const GraphWidget = {\n    id: 'graphWidget',\n    name: \"Dataset Graph\",\n    component: \"graphComponent\",\n    panelName: \"leftPanel\",\n    enableClose: true,\n    enableRename: true,\n    enableDrag: true,\n    status: WidgetStatus.ACTIVE,\n};\n\n\nexport const NodeViewWidget = {\n    id: 'nodeViewWidget',\n    name: \"Node View\",\n    component: \"nodeView\",\n    panelName: \"rightPanel\",\n    enableClose: true,\n    enableRename: false,\n    enableDrag: false,\n    status: WidgetStatus.ACTIVE,\n};\n","import { rdfTypes } from './graphModel';\n\nfunction createImage(node) {\n    const img = new Image();\n    if ( node.type === rdfTypes.File.key ){\n        const extension = node.name.split(\".\").pop();\n        img.src = \"./images/graph/files/\" + extension + \".svg\"\n    } else {\n        img.src = (rdfTypes[String(node.type)]?.image !== \"\") ? rdfTypes[String(node.type)].image : rdfTypes.Uknown.image\n    }\n    return img;\n}\n\nfunction extractProperties(node, ttlTypes) {\n    if (ttlTypes === undefined) {\n        return;\n    }\n    for (const property of node.properties) {\n        for (const type_property of rdfTypes[node.type].properties) {\n            if (property.predicate === (ttlTypes[type_property.type]?.iri?.id + type_property.key)) {\n                if (node.attributes[type_property.property] !== undefined) {\n                    node.attributes[type_property.property].push(property.value);\n                } else {\n                    node.attributes[type_property.property] = [];\n                    node.attributes[type_property.property].push(property.value);\n                }\n            }\n        }\n    }\n\n    if (node?.attributes?.identifier !== undefined) {\n        node.name = node.attributes.identifier;\n    }\n}\n\nvar NodesFactory = function () {\n    this.createNode = function (node, ttlTypes) {\n        var typed_node;\n\n        switch(node.type) {\n            case \"Award\":\n                typed_node = new Award(node, ttlTypes);\n                break;\n            case \"Collection\":\n                typed_node = new Collection(node, ttlTypes);\n                break;\n            case \"Contributor\":\n                typed_node = new Contributor(node, ttlTypes);\n                break;\n            case \"Dataset\":\n                typed_node = new Dataset(node, ttlTypes);\n                break;\n            case \"Protocol\":\n                typed_node = new Protocol(node, ttlTypes);\n                break;\n            case \"Sample\":\n                typed_node = new Sample(node, ttlTypes);\n                break;\n            case \"Subject\":\n                typed_node = new Subject(node, ttlTypes);\n                break;\n            case \"File\":\n                typed_node = new File(node, ttlTypes);\n                break;\n            case \"Person\":\n                typed_node = new Person(node, ttlTypes);\n                break;\n            default:\n                typed_node = new Unknown(node, ttlTypes);\n        }\n\n        return typed_node;\n    }\n}\n\nconst Collection = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Contributor = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\n\nconst Award = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Dataset = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\":\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Protocol = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    var namesArray = node.name.split(\"/\");\n    node.name = namesArray[namesArray.length - 1];\n    return node;\n};\n\nconst Sample = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Subject = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    if (node.attributes?.identifier !== undefined) {\n        node.name = node.attributes?.identifier[0];\n    } else {\n        var namesArray = node.name.split(\"/\");\n        node.name = namesArray[namesArray.length - 1];\n    }\n    return node;\n};\n\nconst File = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nconst Person = function (node, ttlTypes) {\n    extractProperties(node, ttlTypes);\n    node.img = createImage(node);\n    // compile node name based on the props extracted, if these are presents\n    node.name = node.attributes?.firstName !== undefined\n        ? node.attributes?.middleName !== undefined\n            ? node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.middleName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName + \" \" + node.attributes?.middleName\n            : node.attributes?.lastName !== undefined\n                ? node.attributes?.firstName + \" \" + node.attributes?.lastName\n                : node.attributes?.firstName\n        : node.name;\n    return node;\n};\n\nconst Unknown = function (node, ttlTypes) {\n    node.img = createImage(node);\n    extractProperties(node, ttlTypes);\n    return node;\n};\n\nexport default NodesFactory;\n","import NodesFactory from './nodesFactory';\nimport { rdfTypes, type_key, typesModel } from './graphModel';\nimport { subject_key, protocols_key, contributors_key } from '../constants';\n\nconst N3 = require('n3');\nconst TMP_FILE = \".tmp\";\n\nconst SUBJECTS_LEVEL = 4;\nconst PROTOCOLS_LEVEL = 2, CRONTRIBUTORS_LEVEL = 2;\n\n\n/*\n * Brief explanation of the Splinter module:\n *\n * This class is meant to take in input the json and turtle files that compose the sds datasets.\n * All the processing starts from the getGraph or getTree methods which call processDataset that does:\n *\n * # initialiseNodesEdges\n *   Initialise all the global vars, arrays and maps used to create the graph and tree.\n *\n * # processTurtle\n *   Through the library N3 it reads the turtle file to get triples of object-predicate-subject and the types.\n *\n * # processJSON\n *   Nothing fancy, just reading a json file.\n *\n * # create_graph\n *   It gets all the subjects that will be the nodes of our graph, it transform all the object as properties of the subjects,\n *   it cleans the array from empty nodes and then it calls organise_nodes() that reorganise the data per category based on the\n *   type of each node that will be casted using a factory and it arrange also the links between nodes accordingly.\n *   The factory defined in the same folder of this module, look at the code in case interested, it's quite simple.\n *\n * # create_tree\n *   It reads the json and create 2 maps, the tree_map where we keep each node by id.\n *   The second map, tree_parent_map, it is instead used to create the hierarchy since we store all the nodes by parent id, so\n *   once we get the tree root we can easily get the tree looking at the children of the root and then recursively we do the same\n *   until the children do not exists anymore in the tree_parent_map data structure, so that means we reached the end of that branch.\n *\n * # mergeData\n *   It links together the tree and the nodes of the graph, so that when we click on the graph we get the linked node on the tree\n *   and viceversa clicking on the tree. It also push some more data into the graph (the graph is generate from the turtle file)\n *   from the json file, since all the files that belongs to subjects and samples are stored in the json but we need to make them\n *   available also for the graph. This is where this operation is done.\n *\n * # generateData\n *   This is the last step where we take all the data created previously and manipulated to then create first of all the tree from\n *   the tree_parent_map. Once the tree is ready we then create the nodes for the graph and we fix the links broken at the mergeData\n *   step since some artificial nodes have been pushed into the nodes array that will be used for the graph.\n *\n */\n\n\nclass Splinter {\n    constructor(jsonFile, turtleFile) {\n        this.factory = new NodesFactory();\n        this.jsonFile = jsonFile;\n        this.turtleFile = turtleFile;\n        this.types = {};\n        this.jsonData = {};\n        this.levelsMap = {};\n        this.turtleData = [];\n        this.tree = undefined;\n        this.nodes = undefined;\n        this.edges = undefined;\n        this.root_id = undefined;\n        this.tree_map = undefined;\n        this.proxies_map = undefined;\n        this.forced_edges = undefined;\n        this.forced_nodes = undefined;\n        this.tree_parents_map = undefined;\n        this.dataset_id = this.processDatasetId();\n        this.store = new N3.Store();\n    }\n\n    /* Initialise global maps before to start data manipulation */\n    initialiseNodesEdges() {\n        this.edges = [];\n        this.nodes = new Map();\n        this.tree_map = new Map();\n        this.proxies_map = new Map();\n        this.tree_parents_map = new Map();\n    }\n\n\n    extractJson() {\n        if (typeof this.jsonFile === 'object' && this.jsonFile !== null) {\n            return this.jsonFile;\n        } else {\n            return JSON.parse(this.jsonFile);\n        }\n    }\n\n\n    extractTurtle() {\n        var that = this;\n        return new Promise(function(resolve, reject) {\n            const parser = new N3.Parser();\n\n            let callbackParse = function (err, quad, prefixes) {\n                if (quad) {\n                    that.store.addQuad(quad);\n                    that.turtleData.push(quad);\n                } else {\n                    resolve(that.turtleData);\n                }\n            }\n\n            const prefixCallback = function (prefix, iri) {\n                that.types[String(prefix)] = {\n                    \"type\": prefix,\n                    \"iri\": iri\n                };\n            }\n            parser.parse(that.turtleFile, callbackParse, prefixCallback);\n        });\n    }\n\n\n    getJson() {\n        return this.jsonData;\n    }\n\n\n    getTurtle() {\n        return this.turtleData;\n    }\n\n\n    async getGraph() {\n        if (this.nodes === undefined || this.edges === undefined) {\n            await this.processDataset();\n        }\n\n        let cleanLinks = [];\n        let self = this;\n\n        // Assign neighbors, to highlight links\n        this.forced_edges.forEach(link => {\n            // Search for existing links\n            let existingLing = cleanLinks.find( l => l.source === link.source && l.target === link.target );\n            if ( !existingLing ) {\n                const a = self.forced_nodes.find( node => node.id === link.source );\n                const b = self.forced_nodes.find( node => node.id === link.target );\n                !a.neighbors && (a.neighbors = []);\n                !b.neighbors && (b.neighbors = []);\n                a.neighbors.push(b);\n                b.neighbors.push(a);\n\n                !a.links && (a.links = []);\n                !b.links && (b.links = []);\n                a.links.push(link);\n                b.links.push(link);\n\n                cleanLinks.push(link);\n            }\n        });\n\n        // Calculate level with max amount of nodes\n        let maxLevel = Object.keys(this.levelsMap).reduce((a, b) => this.levelsMap[a].length > this.levelsMap[b].length ? a : b);\n        // Space between nodes\n        let nodeSpace = 100;\n        // The furthestLeft a node can be\n        let furthestLeft = 0 - (Math.ceil(this.levelsMap[maxLevel].length)/2  * nodeSpace );\n        let positionsMap = {};\n\n        let levelsMapKeys = Object.keys(this.levelsMap);\n\n        levelsMapKeys.forEach( level => {\n            positionsMap[level] = furthestLeft + nodeSpace/2;\n            this.levelsMap[level].sort((a, b) => a.attributes?.relativePath?.localeCompare(b.attributes?.relativePath));\n        });\n\n        // Sort second and third level nodes\n        this.levelsMap[3]?.sort((a, b) => a.parent?.type?.localeCompare(b.parent?.type));\n        this.levelsMap[2]?.sort((a, b) => b.neighbors.length - a.neighbors.length );\n\n        // Start assigning the graph from the bottom up\n        let neighbors = 0;\n        levelsMapKeys.reverse().forEach( level => {\n            this.levelsMap[level].forEach ( (n, index) => {\n                neighbors = n?.neighbors?.filter(neighbor => { return neighbor.level > n.level });\n                if ( neighbors.length > 0 ) {\n                    n.xPos = neighbors[0].xPos + (neighbors[neighbors.length-1].xPos - neighbors[0].xPos) * .5;\n                    positionsMap[n.level] = n.xPos + nodeSpace;\n                } else {\n                    n.xPos = positionsMap[n.level] + nodeSpace;\n                    positionsMap[n.level] = n.xPos;\n                }\n            })\n        });\n\n        return {\n            nodes: this.forced_nodes,\n            links: cleanLinks,\n            radialVariant : this.levelsMap[maxLevel].length,\n            hierarchyVariant : maxLevel * 20\n        };\n    }\n\n\n    async getTree() {\n        if (this.tree === undefined) {\n            await this.processDataset();\n        }\n        return this.tree;\n    }\n\n\n    getDatasetId() {\n        return this.dataset_id;\n    }\n\n\n    async processTurtle() {\n        await this.extractTurtle();\n    }\n\n\n    processDatasetId() {\n        this.processJSON();\n        return this.jsonData.data[0].dataset_id.replace('dataset:', '');\n    }\n\n\n    processJSON() {\n        this.jsonData = this.extractJson()\n    }\n\n\n    /* Entry point for the whole conversion and graph/tree creation */\n    async processDataset() {\n        this.initialiseNodesEdges()\n        await this.processTurtle();\n        this.processJSON();\n        this.create_graph();\n        this.create_tree();\n        this.mergeData();\n        this.generateData()\n    }\n\n\n    /* Creates a map of types that will be used by the graphModel.js in order to extract values from each type */\n    get_type(node) {\n        const typeFound = {\n            type: typesModel.unknown.type,\n            length: 0\n        }\n        for (const type of node?.types) {\n            if (type.type === this.types.owl.iri.id + \"NamedIndividual\") {\n                for (const rdfType in this.types) {\n                    if ((node.id.includes(this.types[rdfType].iri.id)) && (this.types[rdfType].iri.id.length > typeFound.length) && (typesModel.NamedIndividual[String(this.types[rdfType].type)] !== undefined)) {\n                        typeFound.type = typesModel.NamedIndividual[String(this.types[rdfType].type)].type;\n                        typeFound.length = this.types[rdfType].iri.id.length;\n                    }\n                }\n            } else if (type.type === this.types.owl.iri.id + \"Ontology\") {\n                typeFound.type = typesModel.ontology.type;\n                typeFound.length = typesModel.ontology.length;\n            } else if ((type.type.includes(this.types.sparc.iri.id)) && (typesModel.sparc[type.type.split(this.types.sparc.iri.id).pop()] !== undefined)) {\n                let sparcType = type.type.split(this.types.sparc.iri.id).pop();\n                typeFound.type = typesModel.sparc[sparcType].type;\n                typeFound.length = typesModel.sparc[sparcType].length;\n            }\n        }\n        return typeFound.type;\n    }\n\n\n    build_node(node) {\n        const graph_node = this.nodes.get(node.id);\n        if (graph_node) {\n            console.error(\"Issue with the build node, this node is already present\");\n            console.error(node);\n        } else {\n            this.nodes.set(node.id, {\n                id: node.id,\n                attributes: {},\n                types: [],\n                name: node.value,\n                proxies: [],\n                properties: [],\n                tree_reference: null,\n                children_counter: 0\n            })\n        }\n    }\n\n\n    update_node(quad, proxy) {\n        // check if the node is blank\n        if (N3.Util.isBlankNode(quad.subject)) {\n            return;\n        }\n        let graph_node = this.nodes.get(quad.subject.id);\n        // check if node to update exists in the list of nodes.\n        if (graph_node) {\n            if (quad.predicate.id === type_key) {\n                graph_node.types = [...graph_node.types, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                this.nodes.set(quad.subject.id, graph_node);\n            } else {\n                graph_node.properties = [...graph_node.properties, {\n                    predicate: quad.predicate.id,\n                    type: quad.object.datatype ? quad.object.datatype.id : quad.object.id,\n                    value: quad.object.value\n                }];\n                if (proxy) {\n                    graph_node.proxies = [...graph_node.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, quad.subject.id);\n                }\n                this.nodes.set(quad.subject.id, graph_node);\n            }\n        } else {\n            // if the node does not exist there should be referenced by a proxy inside another node.\n            var found = true;\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(quad.subject.id)) !== -1) {\n                    value.properties = [...value.properties, {\n                        predicate: quad.predicate.id,\n                        type: quad.object.datatype,\n                        value: quad.object.value\n                    }];\n                    value.proxies = [...value.proxies, quad.object.id];\n                    this.proxies_map.set(quad.object.id, key);\n                    this.nodes.set(key, value);\n                    found = false;\n                }\n            });\n            if (found) {\n                // if we end up here it means we have a node with links to ids or proxy, so we do not know\n                // where this node should go.\n                console.error(\"Houston, we have a problem!\");\n                console.error(quad);\n            }\n        }\n    }\n\n\n    link_nodes(quad) {\n        // before to create the node check that:\n        // 1. subject and object are nodes in our graph\n        // 2. we are not self referencing the node with a property that we don't need\n        const source = this.nodes.get(quad.subject.id);\n        const target = this.nodes.get(quad.object.id);\n        if (source && target && (quad.subject.id !== quad.object.id)) {\n            this.edges.push({\n                source: quad.subject.id,\n                target: quad.object.id\n            });\n            this.update_node(quad, false);\n        } else {\n            // if the conditions above are not satisfied we push this relationship as a proxy of another node already present\n            this.update_node(quad, true);\n        }\n    }\n\n\n    cast_nodes() {\n        // prepare 2 place holders for the dataset and ontology node, the ontology node is not required but\n        // we might need to display some of its properties, so we merge them.\n        let dataset_node = undefined;\n        let ontology_node = undefined;\n\n        // cast each node to the right type, also keep trace of the dataset and ontology nodes.\n        this.nodes.forEach((value, key) => {\n            value.type = this.get_type(value);\n            const typedNode = this.factory.createNode(value, this.types);\n            if (typedNode.type !== rdfTypes.Unknown.key) {\n                this.nodes.set(key, typedNode);\n            } else {\n                this.nodes.delete(key);\n                this.edges = this.edges.filter(link => {\n                    if (link.source !== key && link.target !== key) {\n                        return true;\n                    }\n                    return false;\n                })\n            }\n            if (value.type === typesModel.NamedIndividual.dataset.type) {\n                dataset_node = value;\n            }\n            if (value.type === typesModel.ontology.type) {\n                ontology_node = value;\n            }\n        });\n        // save the dataset id used for the uri_api later with the tree\n        this.root_id = dataset_node.id;\n        // merge the 2 nodes together\n        dataset_node.properties = dataset_node.properties.concat(ontology_node.properties);\n        dataset_node.proxies = dataset_node.proxies.concat(ontology_node.proxies);\n        dataset_node.level = 1;\n        this.nodes.set(dataset_node.id, dataset_node);\n        this.nodes.delete(ontology_node.id);\n        // fix links that were pointing to the ontology\n        let temp_edges = this.edges.map(link => {\n            if (link.source === ontology_node.id) {\n                link.source = dataset_node.id\n            }\n            if (link.target === ontology_node.id) {\n                link.target = dataset_node.id\n            }\n            return link;\n        })\n        this.edges = temp_edges;\n        return dataset_node;\n    }\n\n\n    organise_nodes(parent) {\n        // structure the graph per category\n        const id = parent.id;\n        const subjects = {\n            id: subject_key,\n            name: \"Subjects\",\n            type: typesModel.NamedIndividual.subject.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: SUBJECTS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(subject_key) === undefined) {\n            this.nodes.set(subject_key, this.factory.createNode(subjects));\n            this.edges.push({\n                source: id,\n                target: subjects.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const protocols = {\n            id: protocols_key,\n            name: \"Protocols\",\n            type: typesModel.sparc.Protocol.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: PROTOCOLS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(protocols_key) ===  undefined) {\n            this.nodes.set(protocols_key, this.factory.createNode(protocols));\n            this.edges.push({\n                source: id,\n                target: protocols.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        const contributors = {\n            id: contributors_key,\n            name: \"Contributors\",\n            type: typesModel.NamedIndividual.contributor.type,\n            properties: [],\n            parent : parent,\n            proxies: [],\n            level: CRONTRIBUTORS_LEVEL,\n            tree_reference: null,\n            children_counter: 0\n        };\n        if (this.nodes.get(contributors_key) === undefined) {\n            this.nodes.set(contributors_key, this.factory.createNode(contributors));\n            this.edges.push({\n                source: id,\n                target: contributors.id\n            })\n        } else {\n            console.error(\"The subjects node already exists!\");\n        }\n\n        this.forced_edges = this.edges.filter(link => {\n            if ((link.target === link.source)\n            || (this.nodes.get(link.source).level === this.nodes.get(link.target).level)) {\n                return false;\n            }\n            return true;\n        }).map(link => {\n            if (link.target === id) {\n                var temp = link.target;\n                link.target = link.source;\n                link.source = temp;\n            }\n            let target_node = this.nodes.get(link.target);\n            if (link.source === id && link.target !== subject_key && target_node.type === rdfTypes.Subject.key) {\n                link.source = subject_key;\n                target_node.level = subjects.level + 1;\n                target_node.parent = subjects;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== contributors_key && target_node.type === rdfTypes.Person.key) {\n                link.source = contributors_key;\n                target_node.level = contributors.level + 1;\n                target_node.parent = contributors;\n                this.nodes.set(target_node.id, target_node);\n            } else if (link.source === id && link.target !== protocols_key && target_node.type === rdfTypes.Protocol.key) {\n                link.source = protocols_key;\n                target_node.level = protocols.level + 1;\n                target_node.parent = protocols;\n                this.nodes.set(target_node.id, target_node);\n            }\n            let source_node = this.nodes.get(link.source);\n            source_node.children_counter++;\n            this.nodes.set(source_node.id, source_node);\n            return link;\n        }).filter(link => {\n            let target_node = this.nodes.get(link.target);\n            if ((link.source === id && (target_node.type !== rdfTypes.Award.key) && (link.target !== contributors_key && link.target !== subject_key && link.target !== protocols_key))) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n\n    fix_links() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if (node.type === rdfTypes.Sample.key) {\n                if (node.attributes.derivedFrom !== undefined) {\n                    let source = this.nodes.get(node.attributes.derivedFrom[0]);\n                    if ( source !== undefined ) {\n                        source.children_counter++\n                        //this.nodes.set(node.attributes.derivedFrom[0], source);\n                        array[index].level = source.level + 1;\n                        this.forced_edges.push({\n                            source: node.attributes.derivedFrom[0],\n                            target: node.id\n                        });\n                    }\n                }\n            }\n\n            if ( node.level !== undefined ) {\n                if ( this.levelsMap[node.level] ) {\n                    this.levelsMap[node.level] = [...this.levelsMap[node.level], node];\n                } else {\n                    this.levelsMap[node.level] = [node];\n                }\n            }\n        });\n    }\n\n    identify_childless_parents() {\n        this.forced_nodes.forEach((node, index, array) => {\n            if ((node.type === rdfTypes.Sample.key || node.type === rdfTypes.Subject.key) && (node.children_counter === 0)) {\n                node.img.src = \"./images/graph/question_mark.svg\"\n            }\n        });\n    }\n\n\n    create_graph() {\n        // build nodes out of the subjects\n        for (const node of this.store.getSubjects()) {\n            if (!N3.Util.isBlankNode(node)) {\n                this.build_node(node);\n            }\n        }\n\n        // consume all the other nodes that will contain mainly literals/properties of the subject nodes\n        for (const [index, quad] of this.turtleData.entries()) {\n            if (N3.Util.isLiteral(quad.object) || quad.predicate.id === type_key) {\n                // The object does not represent a node on his own but rather a property of the existing subject\n                this.update_node(quad, false);\n            } else {\n                // I don't know yet what to do with this node\n                this.link_nodes(quad);\n            }\n        }\n\n        let dataset_node = this.cast_nodes();\n        this.organise_nodes(dataset_node);\n    }\n\n\n    create_tree() {\n        for (const leaf of this.jsonData.data) {\n            this.tree_map.set(leaf.uri_api, leaf);\n            if (leaf.parent_id === leaf.remote_id) {\n                continue;\n            }\n            let children = this.tree_parents_map.get(leaf.parent_id);\n            if (children) {\n                this.tree_parents_map.set(leaf.parent_id, [...children, leaf]);\n            } else {\n                this.tree_parents_map.set(leaf.parent_id, [leaf]);\n            }\n        }\n    }\n\n    /**\n     * Exclude certain nodes\n     * @param {*} node\n     * @returns\n     */\n    filterNode = (node) => {\n        return node.basename.includes(TMP_FILE)\n    }\n\n\n    mergeData() {\n        this.nodes.forEach((value, key) => {\n            if (value.attributes !== undefined && value.attributes.hasFolderAboutIt !== undefined) {\n                const children = this.tree_parents_map.get(this.tree_map.get(value.attributes.hasFolderAboutIt[0])?.remote_id);\n                children?.forEach(child => {\n                    !this.filterNode(child) && this.linkToNode(child, value);\n                });\n            }\n        });\n    }\n\n\n    linkToNode(node, parent) {\n        let level = parent.level;\n        if (parent.type === rdfTypes.Sample.key) {\n            if (parent.attributes.derivedFrom !== undefined) {\n                level = this.nodes.get(parent.attributes.derivedFrom[0]).level + 1;\n            }\n        }\n        parent.children_counter++;\n        const new_node = this.buildNodeFromJson(node, level);\n        new_node.parent = parent;\n        this.forced_edges.push({\n            source: parent.id,\n            target: new_node.id\n        });\n        this.nodes.set(new_node.id, this.factory.createNode(new_node));\n        var children = this.tree_parents_map.get(node.remote_id);\n        if (children?.length > 0) {\n            children.forEach(child => {\n                !this.filterNode(child) && this.linkToNode(child, new_node);\n            });\n        }\n    }\n\n\n    buildNodeFromJson(item, level) {\n        const node_id = this.proxies_map.get(item.uri_api);\n        if (node_id) {\n            return this.nodes.get(node_id);\n        }\n        const new_node = {\n            id: item.uri_api,\n            level: level + 1,\n            attributes: {\n                identifier: item.basename,\n                relativePath: item.dataset_relative_path,\n                size: item.size_bytes,\n                mimetype: item.mimetype,\n                updated: item.timestamp_updated,\n                status: item.status,\n            },\n            types: [],\n            name: item.basename,\n            proxies: [],\n            properties: [],\n            type: item.mimetype === \"inode/directory\" ? \"Collection\" : \"File\",\n            tree_reference: null,\n            children_counter: 0\n        };\n        return this.factory.createNode(new_node, []);\n    }\n\n\n    generateData() {\n        // generate the tree\n        var tree_root = this.tree_map.get(this.root_id);\n        var children = this.tree_parents_map.get(tree_root.remote_id);\n        this.tree_parents_map.delete(tree_root.remote_id);\n        this.tree = this.generateLeaf(tree_root);\n        children.forEach(leaf => {\n            this.build_leaf(leaf, this.tree);\n        });\n\n        // generate the Graph\n        this.forced_nodes = Array.from(this.nodes).map(([key, value]) => {\n            let tree_node = this.tree_map.get(value.id);\n            if (tree_node) {\n                value.tree_reference = tree_node;\n                this.nodes.set(key, value);\n                tree_node.graph_reference = value;\n                this.tree_map.set(value.id, tree_node);\n            } else {\n                value.proxies.every(proxy => {\n                    tree_node = this.tree_map.get(proxy);\n                    if (tree_node) {\n                        value.tree_reference = tree_node;\n                        this.nodes.set(key, value);\n                        tree_node.graph_reference = value;\n                        this.tree_map.set(proxy, tree_node);\n                        return false;\n                    }\n                    return true;\n                })\n            }\n            return value;\n        })\n\n        this.fix_links();\n        this.identify_childless_parents();\n    }\n\n    build_leaf(node, parent) {\n        var newChild = this.generateLeaf(node, parent);\n        parent.items.push(newChild);\n\n        var children = this.tree_parents_map.get(node.remote_id);\n        this.tree_parents_map.delete(node.remote_id);\n        if (children) {\n            children.forEach(child => {\n                this.build_leaf(child, newChild);\n            });\n        }\n    }\n\n    generateLeaf(node, parent) {\n        node.id = node.uri_api\n        node.parent = true;\n        node.text = parent !== undefined ? node.basename : this.dataset_id;\n        node.type = node.mimetype === \"inode/directory\" ? rdfTypes.Collection.key : rdfTypes.File.key;\n        node.path = (parent !== undefined && parent.path !== undefined) ? [node.id, ...parent.path] : [node.id];\n        if (!node.items) {\n            node.items = [];\n        }\n        node.graph_reference = this.findReference(node.uri_api);\n        this.tree_map.set(node.id, node);\n        const newNode = {\n            id: node.uri_api,\n            text: node.text,\n            items: node.items,\n            graph_reference: node?.graph_reference?.id,\n            path: node.path\n        }\n        return newNode;\n    }\n\n    findReference(id) {\n        var reference = this.nodes.get(id);\n        if (reference === undefined) {\n            this.nodes.forEach((value, key) => {\n                if (value.proxies.indexOf(String(id)) !== -1) {\n                    reference = value;\n                }\n            });\n        }\n        return reference;\n    }\n}\n\nexport default Splinter;\n","import React from 'react';\nimport Uploader from './Uploader';\nimport UrlUploader from './UrlUploader';\nimport { useDispatch } from 'react-redux';\nimport UploadTabPanel from './UploadTabPanel';\nimport { Dialog, Box } from '@material-ui/core';\nimport UploadDialogHeader from './UploadDialogHeader';\nimport { addDataset, triggerError } from '../../redux/actions';\nimport { NodeViewWidget } from '../../app/widgets';\nimport {  addWidget } from '@metacell/geppetto-meta-client/common/layout/actions';\nimport Splinter from '../../utils/Splinter';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\n\nconst UploadDialog = (props) => {\n  const dispatch = useDispatch();\n  const { open, handleClose } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // TODO:\n  // The below is just an hack waiting for the design to be clarified, I need an entrypoint for the datasets\n  // that provides both the files and so far I do not want to implement anything that will be replaced later\n\n  const handleDone = async (files) => {\n    if ((files.length === 2) && (files[0].data !== undefined && files[1].data !== undefined)) {\n      let _json = undefined;\n      let _turtle = undefined;\n\n      for (let file of files) {\n        let extension = file.file.name.split('.').pop();\n        if (extension === \"ttl\") {\n          _turtle = file.data\n        }\n        if (extension === \"json\") {\n          _json = file.data\n        }\n      }\n      const splinter = new Splinter(_json, _turtle);\n      const _dataset = {\n        id: splinter.getDatasetId(),\n        graph: await splinter.getGraph(),\n        tree: await splinter.getTree(),\n        splinter: splinter\n      }\n\n      handleClose();\n      dispatch(addDataset(_dataset));\n      dispatch(addWidget({\n        id: _dataset.id,\n        name: _dataset.id.substring(0,10) + \"... Graph\",\n        component: \"graphComponent\",\n        panelName: \"leftPanel\",\n        enableClose: true,\n        enableRename: true,\n        enableDrag: true,\n        status: WidgetStatus.ACTIVE,\n        config: {\n          graph_id: _dataset.id,\n          component: \"graphComponent\",\n        }\n      }));\n      dispatch(addWidget(NodeViewWidget));\n    } else {\n      handleClose();\n      dispatch(triggerError(\"Just a test for the error dialog.\"))\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <Box className='dialog_header'>\n        <UploadDialogHeader handleChange={handleChange} value={value} handleClose={handleClose} />\n      </Box>\n\n      <Box className='dialog_body'>\n        <UploadTabPanel value={value} index={0}>\n          <Uploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n        <UploadTabPanel value={value} index={1}>\n          <UrlUploader handleClose={handleClose} handleDone={handleDone}/>\n        </UploadTabPanel>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default UploadDialog;\n","export default __webpack_public_path__ + \"static/media/toggle-right.ce5f8e9f.svg\";","export default __webpack_public_path__ + \"static/media/logo.ca7fb900.svg\";","export default __webpack_public_path__ + \"static/media/toggle-left.ed7cc2df.svg\";","export default __webpack_public_path__ + \"static/media/search.22df39ce.svg\";","import React from 'react';\nimport {\n  Box,\n  IconButton,\n  FilledInput,\n  FormControl,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport ToggleRight from '../../images/toggle-right.svg';\nimport Logo from '../../images/logo.svg';\nimport ToggleLeft from '../../images/toggle-left.svg';\nimport Search from '../../images/search.svg';\n\nconst SidebarHeader = (props) => {\n  const { expand, setExpand, setSearchTerm, searchTerm } = props;\n  const handleChange = ( e ) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <Box className='sidebar-header'>\n        <img src={Logo} alt='Logo' />\n        <IconButton aria-label='toggle' onClick={() => setExpand(!expand)}>\n          <img src={!expand ? ToggleRight : ToggleLeft} alt='Toggle' />\n        </IconButton>\n\n        {expand && (\n          <FormControl variant='filled' fullWidth>\n            <FilledInput\n              aria-autocomplete='none'\n              disableUnderline={true}\n              id='filled-adornment-password'\n              placeholder='Search for an instance'\n              startAdornment={\n                <InputAdornment position='start'>\n                  <img src={Search} alt='Search' />\n                </InputAdornment>\n              }\n              endAdornment={\n                <InputAdornment position='end'>\n                  <Button onClick={() => setSearchTerm(setSearchTerm)}>Search</Button>\n                </InputAdornment>\n              }\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </FormControl>\n        )}\n      </Box>\n\n  )\n}\n\nexport default SidebarHeader;\n","export default __webpack_public_path__ + \"static/media/down.0095113d.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TreeItem } from \"@material-ui/lab\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport DOWN from \"../../../images/tree/down.svg\";\n\nconst StyledTreeItem = (props) => {\n  const {\n    dataset,\n    labelText,\n    labelIcon: LabelIcon,\n    labelInfo,\n    iconClass,\n    onNodeSelect,\n    ...other\n  } = props;\n\n  return (\n    <TreeItem\n      data={dataset}\n      label={\n        <div className={`labelRoot ${iconClass}`}>\n          <Box className=\"labelIcon\"></Box>\n          <Typography\n            onClick={event => {\n              onNodeSelect(event, props.nodeId);\n              event.preventDefault();\n            }}\n            variant=\"body2\" \n            className=\"labelText\">\n            {labelText}\n          </Typography>\n          {labelInfo > 0 ? (\n            <Typography\n              variant=\"caption\"\n              className=\"labelCaption\"\n              color=\"inherit\"\n            >\n              {labelInfo}\n              <img src={DOWN} alt=\"down\" />\n            </Typography>\n          ) : null}\n        </div>\n      }\n      {...other}\n    />\n  );\n};\n\nStyledTreeItem.propTypes = {\n  labelIcon: PropTypes.elementType.isRequired,\n  labelInfo: PropTypes.number,\n  labelText: PropTypes.string.isRequired,\n  iconClass: PropTypes.string.isRequired,\n};\n\nexport default StyledTreeItem;\n","import React, { useEffect, useState } from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport DATASET from '../../../images/tree/dataset.svg';\nimport FOLDER from '../../../images/tree/folder.svg';\nimport FILE from '../../../images/tree/file.svg';\nimport StyledTreeItem from './TreeViewItem';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectInstance } from '../../../redux/actions';\nimport { WidgetStatus } from \"@metacell/geppetto-meta-client/common/layout/model\";\nimport * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\nimport { GRAPH_SOURCE, TREE_SOURCE } from '../../../constants';\n\nconst InstancesTreeView = (props) => {\n  const dispatch = useDispatch();\n\n  const { searchTerm, dataset_id } = props;\n  const datasets = JSON.parse(JSON.stringify([window.datasets[dataset_id].tree]));\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const [nodes, setNodes] = useState([]);\n  const [items, setItems] = useState(datasets);\n  const widgets = useSelector(state => state.widgets);\n\n  const onNodeSelect = (e, nodeId) => {\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeId);\n    dispatch(selectInstance({\n      dataset_id: dataset_id,\n      graph_node: node?.graph_reference?.id,\n      tree_node: node.id,\n      source: TREE_SOURCE\n    }));\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n    if (widgets[dataset_id] !== undefined) {\n      widgets[dataset_id].status = WidgetStatus.ACTIVE;\n      dispatch(layoutActions.updateWidget(widgets[dataset_id]));\n    }\n  };\n\n  const onNodeToggle = (e, nodeIds) => {\n    if (nodeIds.length === 0) {\n      return;\n    }\n\n    if ((nodes.length !== nodeIds.length) && (nodes[0] === nodeIds[0])) {\n      var original = [...nodes];\n      var newPath = [...nodeIds];\n      while (original[0] === newPath[0]) {\n        original.shift();\n        newPath.shift();\n      }\n      nodeIds = original;\n    }\n\n    const node = window.datasets[dataset_id].splinter.tree_map.get(nodeIds[0]);\n    if (node && node.path !== undefined && node.path[0] !== nodes[0]) {\n      setNodes(node.path);\n    }\n  };\n\n  let globalId = nodeSelected.dataset_id.split(':');\n  if (globalId[globalId.length - 1] !== dataset_id && nodes.length > 0) {\n    setNodes([]);\n  } else if (globalId[globalId.length - 1] === dataset_id && nodeSelected.source === GRAPH_SOURCE && nodeSelected.tree_node && nodeSelected.tree_node.path[0] !== nodes[0]) {\n    setNodes(nodeSelected.tree_node.path);\n  }\n\n  const nestedLoop = (obj) => {\n    const res = [];\n    const recurse = (obj, current) => {\n      for (const key in obj) {\n        let value = obj[key];\n        if (value !== undefined) {\n          if (value && typeof value === 'object') {\n            recurse(value, key);\n          } else if (key === 'id') {\n            res.push(value);\n          } else if (key === 'path') {\n            continue;\n          }\n        }\n      }\n    }\n    recurse(obj);\n    return res;\n  }\n\n  const searchTree = (element, matchingTitle) => {\n    const lowercaseSearch = matchingTitle.toLowerCase();\n    var res = element.filter(function matchSearch(o) {\n      if (o.text.toLowerCase().includes(lowercaseSearch)) {\n        return true;\n      }\n      if (o.items) {\n        return (o.items = o.items.filter(matchSearch)).length;\n      }\n      return false;\n    });\n    setNodes(nestedLoop(res));\n    return res;\n  };\n\n  useEffect(() => {\n    setItems(\n      searchTerm.length >= 3 ? searchTree([...datasets], searchTerm) : datasets\n    );\n  }, [searchTerm]);\n\n  // Initialize state in this hook\n  useEffect(() => {\n    // Populate tree items state with datasets\n    if ( items.length === 0 && datasets.length > 0 ) {\n      setItems(datasets);\n    } else if ( datasets.length > 0 && items.length !== datasets.length  ) {\n      // Update datasets, after adding a new dataset\n      setItems(datasets);\n    }\n  });\n\n  const getTreeItemsFromData = (treeItems) => {\n    return treeItems.map((treeItemData) => {\n      let items = undefined;\n      if (treeItemData.items && treeItemData.items.length > 0) {\n        items = getTreeItemsFromData(treeItemData.items);\n      }\n      const itemLength = items?.length;\n      const labelProps = treeItemData?.parent ?\n        { labelIcon: DATASET, iconClass: 'dataset' }\n        : itemLength > 0 ? { labelIcon: FOLDER, iconClass: 'folder' }\n        : { labelIcon: FILE, iconClass: 'file' };\n\n      return (\n        <StyledTreeItem\n          dataset={treeItemData?.dataset_id}\n          nodeId={treeItemData?.id}\n          labelText={treeItemData?.text}\n          labelIcon={labelProps?.labelIcon}\n          labelInfo={itemLength}\n          children={items}\n          key={treeItemData?.id}\n          iconClass={labelProps?.iconClass}\n          onNodeSelect={onNodeSelect}\n        />\n      );\n    });\n  };\n\n  const treeRef = React.createRef();\n\n  return (\n    <>\n      <TreeView\n        className='scrollbar treeViewer'\n        defaultExpanded={nodes}\n        defaultCollapseIcon={false}\n        defaultExpandIcon={false}\n        defaultEndIcon={false}\n        ref={treeRef}\n        expanded={nodes}\n        onNodeToggle={onNodeToggle}\n      >\n        { getTreeItemsFromData(items) }\n      </TreeView>\n    </>\n  );\n};\n\nexport default InstancesTreeView;\n","import React from 'react';\nimport {\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport Search from '../../images/search.svg';\nimport Typography from '@material-ui/core/Typography';\nimport InstancesTreeView from './TreeView/InstancesTreeView';\nimport { useSelector } from 'react-redux'\n\nconst SidebarContent = (props) => {\n  const { expand, setExpand, searchTerm } = props;\n  const datasets = useSelector(state => state.sdsState.datasets);\n\n  const renderContent = () => {\n    if (datasets?.length > 0) {\n      return (\n        <>\n          <Typography component='h3'>Uploaded Instances</Typography>\n          <Box className='scrollbar'>\n            { datasets.map((id, index) => <InstancesTreeView key={\"tree_\" + index} searchTerm={searchTerm} dataset_id={id} />) }\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography className='no-instance'>\n            No instances to display yet.\n          </Typography>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Box className='sidebar-body'>\n      {!expand ? (\n        <IconButton\n          aria-label='toggle'\n          onClick={() => setExpand(!expand)}\n        >\n          <img src={Search} alt='Search' />\n        </IconButton>\n      ) : ( renderContent() )\n      }\n    </Box>\n  )\n}\n\nexport default SidebarContent;\n\n\n// (\n//   <>\n//     <Typography component='h3'>Uploaded Instances</Typography>\n//     { datasets.map( id => {\n//       return <InstancesTreeView searchTerm={searchTerm} dataset={window.datasets[id].tree }/>\n//     })\n//     }\n//   </>\n// )\n","export default __webpack_public_path__ + \"static/media/plus.f6839d16.svg\";","import Plus from '../../images/plus.svg';\nimport { IMPORT_TEXT } from '../../constants';\nimport { Box, Button } from '@material-ui/core';\n\nconst SidebarFooter = (props) => {\n  return (\n    <Box className='sidebar-footer'>\n      <Button\n        variant='contained'\n        disableElevation\n        color='primary'\n        onClick={() => props.setOpenDialog(true)}\n      >\n        <img src={Plus} alt='Plus' />\n        {IMPORT_TEXT}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SidebarFooter;\n","import React, { useState } from 'react';\nimport { Box } from '@material-ui/core';\nimport SidebarHeader from './Header';\nimport SidebarContent from './List';\nimport SidebarFooter from './Footer';\n\nconst Sidebar = (props) => {\n  const [expand, setExpand] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <Box className={'sidebar' + (!expand ? ' shrink' : '')}>\n      <SidebarHeader setExpand={setExpand} expand={expand} setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <SidebarContent setExpand={setExpand} expand={expand} searchTerm={searchTerm} />\n      <SidebarFooter\n        setExpand={setExpand}\n        expand={expand}\n        openDialog={props.openDialog}\n        setOpenDialog={props.setOpenDialog}\n      />\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/curve.e6ef8395.svg\";","export default __webpack_public_path__ + \"static/media/linewithradius.eb303573.svg\";","export default __webpack_public_path__ + \"static/media/filled-folder.139a09e7.svg\";","export default __webpack_public_path__ + \"static/media/filled-file.1b51516a.svg\";","export default __webpack_public_path__ + \"static/media/filled-dataset.834e911d.svg\";","import createTheme from '@material-ui/core/styles/createTheme';\nimport vars from './styles/constant';\nimport CURVE from './images/tree/curve.svg';\nimport LINE from './images/tree/linewithradius.svg';\nimport FILLED_FOLDER from './images/tree/filled-folder.svg';\nimport FILLED_FILE from './images/tree/filled-file.svg';\nimport FILLED_DATASET from './images/tree/filled-dataset.svg';\nimport DATASET from './images/tree/dataset.svg';\nimport FOLDER from './images/tree/folder.svg';\nimport FILE from './images/tree/file.svg';\n\nconst {\n  primaryColor,\n  secondaryColor,\n  primaryTextColor,\n  lightBorderColor,\n  radius,\n  primaryColorHover,\n  whiteColor,\n  outlinedButtonHover,\n  primaryBgColor,\n  inputTextColor,\n  scrollbarBg,\n  iconButtonHover,\n  primaryTransition,\n  fontFamily,\n  barSuccessColor,\n  noInstanceColor,\n  gutter,\n  errorColor,\n  tabsBgColor,\n  progressBgPrimary,\n  dropzoneBorderColor,\n  dropzoneTextColor,\n  inputFocusShadow,\n  successInputFocusShadow,\n  placeHolderColor,\n  dialogShadow,\n  tabsBorderColor,\n  dialogBodyBgColor,\n  sideBarTextColor,\n  sideBarLabelColor,\n  chipBgColor,\n  progressErrorBg,\n  treeBorderColor,\n} = vars;\n\nconst theme = createTheme({\n  typography: {\n    fontFamily,\n    h3: {\n      fontWeight: '600',\n      fontSize: '1.5rem',\n      lineHeight: '1.8125rem',\n      color: primaryTextColor,\n    },\n  },\n\n  overrides: {\n    MuiBreadcrumbs: {\n      root: {\n        marginTop: '.25rem',\n      },\n      ol: {\n        lineHeight: 1,\n      },\n      separator: {\n        marginLeft: '.25rem',\n        marginRight: '.25rem',\n        color: dropzoneTextColor,\n      },\n      li: {\n        fontSize: '.75rem',\n        lineHeight: '.875rem',\n        letterSpacing: '.00375rem',\n        fontWeight: '500',\n        color: dropzoneTextColor,\n        '& a': {\n          color: primaryColor,\n        },\n        '& p': {\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          letterSpacing: '.00375rem',\n          fontWeight: '500',\n          color: dropzoneTextColor,\n        },\n      },\n    },\n    MuiChip: {\n      root: {\n        backgroundColor: chipBgColor,\n        borderRadius: '.3125rem',\n        display: 'inline-flex',\n        alignItems: 'center',\n        height: '1.375rem',\n        marginTop: '.25rem',\n        marginRight: '.375rem',\n        '& .MuiChip-label': {\n          padding: '0 .375rem',\n          fontSize: '.75rem',\n          color: primaryTextColor,\n        },\n      },\n    },\n    MuiCircularProgress: {\n      colorPrimary: {\n        color: whiteColor,\n      },\n    },\n    MuiLinearProgress: {\n      root: {\n        borderRadius: '.125rem',\n      },\n      colorPrimary: {\n        backgroundColor: progressBgPrimary,\n      },\n      colorSecondary: {\n        backgroundColor: progressBgPrimary,\n      },\n      barColorPrimary: {\n        backgroundColor: primaryColor,\n        borderRadius: '.25rem',\n      },\n      barColorSecondary: {\n        backgroundColor: barSuccessColor,\n        borderRadius: '.25rem',\n      },\n    },\n    MuiDropzoneArea: {\n      root: {\n        borderWidth: '0.09375rem',\n        borderColor: dropzoneBorderColor,\n        borderRadius: '.5rem',\n        height: '8.75rem',\n        minHeight: '8.75rem',\n        backgroundColor: 'transparent',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        '& + .uploaded-files': {\n          marginTop: '1rem',\n        },\n\n        '&.hide': {\n          display: 'none',\n        },\n\n        '& .MuiDropzoneArea-textContainer': {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          '& .MuiDropzoneArea-text': {\n            margin: '0',\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            order: 2,\n            marginTop: '.6875rem',\n            color: dropzoneTextColor,\n          },\n          '& svg': {\n            color: primaryColor,\n          },\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        backgroundColor: whiteColor,\n        borderRadius: '.5rem',\n        '&.Mui-disabled': {\n          color: dropzoneTextColor,\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent',\n          },\n        },\n        '&.Mui-focused': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderWidth: '.0625rem',\n            borderColor: primaryColor,\n            boxShadow: `0 0 0 .1875rem ${inputFocusShadow}`,\n          },\n        },\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: primaryColor,\n          },\n        },\n\n        '&.field-success': {\n          '& .MuiOutlinedInput-input': {\n            color: barSuccessColor,\n          },\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: barSuccessColor,\n          },\n          '&:hover': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: barSuccessColor,\n            },\n          },\n          '&.Mui-focused': {\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderWidth: '.0625rem',\n              borderColor: barSuccessColor,\n              boxShadow: `0 0 0 .1875rem ${successInputFocusShadow}`,\n            },\n          },\n        },\n      },\n\n      notchedOutline: {\n        borderColor: 'transparent',\n      },\n      input: {\n        fontSize: '.75rem',\n        letterSpacing: '-0.01em',\n        padding: '.75rem 0',\n        '&::placeholder': {\n          color: placeHolderColor,\n        },\n      },\n      adornedStart: {\n        paddingLeft: '.75rem',\n        '& .MuiInputAdornment-root': {\n          marginTop: '0 !important',\n        },\n      },\n      adornedEnd: {\n        paddingRight: '.75rem',\n      },\n    },\n    MuiDialog: {\n      paperWidthSm: {\n        width: '25rem',\n        borderRadius: '.75rem',\n        boxShadow: `0 .25rem 3.125rem ${dialogShadow}`,\n      },\n    },\n    MuiTabs: {\n      root: {\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          borderTop: `.0625rem solid ${tabsBorderColor}`,\n          borderBottom: `.0625rem solid ${tabsBorderColor}`,\n          padding: gutter + 2,\n        },\n\n        '&.rounded': {\n          boxShadow: `inset 0 0 .125rem ${dialogShadow}`,\n          background: tabsBgColor,\n          padding: '.25rem .3125rem',\n          borderRadius: '2.5rem',\n          width: '14.75rem',\n          display: 'flex',\n          alignItems: 'center',\n          margin: '0 auto',\n        },\n\n        '& .MuiTabs-indicator': {\n          display: 'none !important',\n        },\n      },\n    },\n    MuiTab: {\n      root: {\n        minWidth: '.0625rem !important',\n        textTransform: 'none',\n        minHeight: '.0625rem',\n        '&:not(.rounded)': {\n          padding: '.5rem',\n          borderRadius: radius,\n          fontWeight: 500,\n          fontSize: '1.125rem',\n          lineHeight: '1.375rem',\n          letterSpacing: '-0.03em',\n          color: `${primaryTextColor} !important`,\n          '&:not(.Mui-selected)': {\n            opacity: 0.4,\n          },\n        },\n        '&.rounded': {\n          width: '50%',\n          padding: 0,\n          fontSize: '.75rem',\n          lineHeight: '.875rem',\n          borderRadius: '2.5rem',\n          height: '2.25rem',\n          textAlign: 'center',\n          letterSpacing: '-0.01em',\n          color: primaryColor,\n          '&:not(.Mui-selected)': {\n            opacity: 1,\n          },\n          '&.Mui-selected': {\n            background: primaryColor,\n            color: whiteColor,\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      root: {\n        fontFamily,\n        backgroundColor: lightBorderColor,\n        height: '2.375rem',\n        borderRadius: `${radius}px !important`,\n        paddingRight: `0.4375rem !important`,\n        '&:hover': {\n          backgroundColor: lightBorderColor,\n        },\n        '& .MuiInputAdornment-positionStart': {\n          marginTop: `0 !important`,\n        },\n      },\n      input: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        fontSize: '0.75rem',\n        letterSpacing: '-0.01em',\n        color: inputTextColor,\n        '&::placeholder': {\n          color: inputTextColor,\n        },\n      },\n      adornedEnd: {\n        '& .MuiButton-root': {\n          padding: '0.3125rem',\n          minWidth: 1,\n          fontSize: '0.75rem',\n          fontWeight: '600',\n          height: 'auto',\n          color: whiteColor,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: 0,\n        borderRadius: radius,\n        backgroundColor: lightBorderColor,\n        '&:hover': {\n          backgroundColor: iconButtonHover,\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        borderRadius: radius,\n        height: '2.375rem',\n        padding: 0,\n        minWidth: '9.875rem',\n      },\n      label: {\n        textTransform: 'none',\n        display: 'flex',\n        '& img': {\n          marginRight: '.25rem',\n        },\n      },\n      containedPrimary: {\n        backgroundColor: primaryColor,\n        '&:hover': {\n          backgroundColor: primaryColorHover,\n        },\n\n        '&.Mui-disabled': {\n          backgroundColor: dropzoneBorderColor,\n          color: whiteColor,\n        },\n      },\n      outlinedPrimary: {\n        borderColor: primaryColor,\n        color: primaryColor,\n        '&:hover': {\n          backgroundColor: outlinedButtonHover,\n        },\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        '*, *::before, *::after': {\n          boxSizing: 'border-box',\n        },\n        ' body': {\n          backgroundColor: secondaryColor,\n        },\n        '.main-structure': {\n          display: 'flex',\n          overflow: 'hidden',\n        },\n        '.scrollbar': {\n          overflow: 'auto',\n          '&::-webkit-scrollbar': {\n            width: '0.25rem',\n\n            '&:horizontal': {\n              height: '0.25rem',\n            },\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: scrollbarBg,\n            borderRadius: '.25rem',\n          },\n        },\n        '.noscrollbar': {\n          overflow: 'auto',\n          scrollbarWidth: 'none',\n          '&::-webkit-scrollbar': {\n            display: 'none',\n          },\n        },\n        '.dialog': {\n          '&_body': {\n            background: dialogBodyBgColor,\n            padding: '1rem',\n            '& .MuiButton-root': {\n              marginTop: '.75rem',\n            },\n          },\n\n          '&_header': {\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingBottom: '3rem',\n            '& img': {\n              cursor: 'pointer',\n              marginLeft: 'auto',\n              width: 'auto',\n              marginBottom: '.1875rem',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              textAlign: 'center',\n              // marginBottom: '1rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n            },\n          },\n        },\n        '.sidebar': {\n          width: '18.75rem',\n          overflow: 'hidden',\n          backgroundColor: secondaryColor,\n          height: '100vh',\n          flexShrink: 0,\n          padding: '1rem 0.75rem',\n          display: 'flex',\n          flexDirection: 'column',\n          transition: primaryTransition,\n          '&.shrink': {\n            width: '4.125rem',\n            transition: primaryTransition,\n            '& .sidebar': {\n              '&-header': {\n                '&> img': {\n                  marginBottom: '1.1875rem',\n                  paddingBottom: '1.1875rem',\n                  borderBottom: `0.0625rem solid ${lightBorderColor}`,\n                },\n              },\n              '&-body': {\n                '& ul': {\n                  display: 'none',\n                },\n              },\n              '&-footer': {\n                '& .MuiButton-root': {\n                  '& img': {\n                    margin: '0',\n                  },\n                },\n              },\n            },\n            '& .MuiButtonBase-root': {\n              padding: 0,\n              width: '2.25rem',\n              minWidth: '0.0625rem',\n              fontSize: 0,\n              margin: '0 auto',\n              display: 'block',\n              height: '2.25rem',\n            },\n          },\n          '&:not(.shrink)': {\n            '& .sidebar': {\n              '&-header': {\n                '& .MuiIconButton-root': {\n                  backgroundColor: 'transparent',\n                },\n                '& .MuiFormControl-root': {\n                  marginTop: '0.875rem',\n                },\n              },\n              '&-footer': {\n                '& .MuiIconButton-root': {\n                  width: '1rem',\n                  height: '1rem',\n                  borderRadius: radius - 4,\n                },\n                '& .MuiButton-contained': {\n                  width: '100%',\n                  '& img': {\n                    marginRight: '0.3125rem',\n                  },\n                },\n              },\n            },\n          },\n          '&-header': {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingBottom: '1.1875rem',\n            borderBottom: `0.0625rem solid ${lightBorderColor}`,\n            flexWrap: 'wrap',\n            '&> img': {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              transition: primaryTransition,\n            },\n          },\n          '&-body': {\n            padding: '1.1875rem 0.75rem',\n            height: 'calc(100% - 14.0625rem)',\n            margin: '0 -0.75rem',\n            flexGrow: 1,\n            position: 'relative',\n\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              right: '0.75rem',\n              bottom: '.5rem',\n              width: '.25rem',\n              height: '.25rem',\n              background: secondaryColor,\n              zIndex: '9999',\n            },\n\n            '& .MuiTreeItem-root > .MuiTreeItem-content .MuiTreeItem-label': {\n              borderRadius: '.5rem',\n              background: 'transparent',\n              border: '0.03125rem solid transparent',\n              minWidth: '10rem',\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-root.Mui-selected > .MuiTreeItem-content .MuiTreeItem-label:hover, & .MuiTreeItem-root.Mui-selected:focus > .MuiTreeItem-content .MuiTreeItem-label': {\n              background: `linear-gradient(0deg, ${lightBorderColor}, ${lightBorderColor}), ${secondaryColor}`,\n              borderColor: primaryColor,\n            },\n\n            '& .MuiTreeItem-content': {\n              position: 'relative',\n              zIndex: '1',\n            },\n\n            '& .MuiTreeItem-root': {\n              '&.Mui-selected > .MuiTreeItem-content .dataset .labelIcon': {\n                backgroundImage: `url(${FILLED_DATASET})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .file .labelIcon': {\n                backgroundImage: `url(${FILLED_FILE})`,\n              },\n              '&.Mui-selected > .MuiTreeItem-content .folder .labelIcon': {\n                backgroundImage: `url(${FILLED_FOLDER})`,\n              },\n              '& .dataset': {\n                '& .labelIcon': {\n                  width: '0.75rem',\n                  height: '0.8125rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${DATASET})`,\n                },\n              },\n              '& .file': {\n                '& .labelIcon': {\n                  width: '0.6875rem',\n                  height: '0.875rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FILE})`,\n                },\n              },\n              '& .folder': {\n                '& .labelIcon': {\n                  height: '0.75rem',\n                  width: '0.9375rem',\n                  fontSize: 0,\n                  backgroundImage: `url(${FOLDER})`,\n                },\n              },\n            },\n\n            '& .labelRoot': {\n              display: 'flex',\n              // alignItems: 'center',\n              padding: '0.5625rem 0.6875rem',\n            },\n            '& .labelIcon': {\n              marginRight: '0.625rem',\n              flexShrink: 0,\n            },\n            '& .labelText': {\n              fontWeight: 'normal',\n              flexGrow: 1,\n              fontSize: '0.8125rem',\n              lineHeight: '1rem',\n              color: whiteColor,\n            },\n            '& .MuiTreeItem-group': {\n              paddingLeft: '1.4375rem',\n              margin: 0,\n            },\n            '& .labelCaption': {\n              height: '1rem',\n              backgroundColor: lightBorderColor,\n              padding: '0 0.25rem',\n              display: 'flex',\n              alignItems: 'center',\n              borderRadius: '0.5rem',\n              fontWeight: '600',\n              fontSize: '0.625rem',\n              lineHeight: '0.75rem',\n              minWidth: '2rem',\n              justifyContent: 'center',\n              color: noInstanceColor,\n              letterSpacing: '-0.01em',\n              '& img': {\n                marginLeft: '0.125rem',\n              },\n            },\n            '& .scrollbar': {\n              overflow: 'auto',\n              height: 'calc(100% - 1rem)',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '0.75rem',\n              lineHeight: '0.9375rem',\n              letterSpacing: '-0.01em',\n              marginBottom: '0.75rem',\n              color: whiteColor,\n              padding: '0 0.6875rem',\n            },\n            '& .MuiTreeView-root': {\n              '& .MuiTreeItem-root': {\n                '& .MuiTreeItem-group': {\n                  '& .MuiCollapse-wrapperInner': {\n                    '& .MuiTreeItem-root': {\n                      '&.Mui-expanded': {\n                        '& .labelCaption': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n            '& ul': {\n              position: 'relative',\n              '&::before': {\n                content: '\"\"',\n                height: 'calc(100% - 0.85rem)',\n                width: '0.0625rem',\n                position: 'absolute',\n                left: '1.0625rem',\n                borderRadius: '3.125rem',\n                top: '-0.5625rem',\n                backgroundImage: `url(${LINE})`,\n                backgroundRepeat: 'repeat',\n              },\n              '& .MuiTreeItem-root': {\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  height: '0.875rem',\n                  width: '1.4375rem',\n                  backgroundImage: `url(${CURVE})`,\n                  position: 'absolute',\n                  top: '0.75rem',\n                  backgroundRepeat: 'no-repeat',\n                  left: '-0.375rem',\n                },\n                '&::after': {\n                  content: '\"\"',\n                  height: '0.0625rem',\n                  borderRadius: '3.125rem',\n                  width: '0.5rem',\n                  backgroundColor: treeBorderColor,\n                  position: 'absolute',\n                  left: '0',\n                  top: '1.0625rem',\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n              },\n            },\n            '& .scrollbar > .MuiTreeView-root': {\n              '&::before': {\n                display: 'none',\n              },\n              '& .MuiTreeItem-label': {\n                paddingLeft: '0',\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus': {\n                  backgroundColor: 'transparent',\n                },\n              },\n              '& .MuiTreeItem-iconContainer': {\n                display: 'none',\n              },\n              '&> .MuiTreeItem-root': {\n                '&::before': {\n                  display: 'none',\n                },\n                '&::after': {\n                  display: 'none',\n                },\n                '&:hover': {\n                  background: 'transparent',\n                },\n                '&:focus > .MuiTreeItem-content': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-expanded': {\n                  '&> .MuiTreeItem-content': {\n                    '&> .MuiTreeItem-label': {\n                      '&> div': {\n                        '& span': {\n                          '& img': {\n                            transform: 'rotate(-180deg)',\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                '& .MuiTreeItem-content': {\n                  '&:hover': {\n                    background: 'transparent',\n                  },\n                },\n                '&> .MuiTreeItem-content': {\n                  '&> .MuiTreeItem-label': {\n                    '&> div': {\n                      '& p': {\n                        fontSize: '0.75rem',\n                        lineHeight: '0.9375rem',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                      },\n                    },\n                  },\n                },\n              },\n            },\n\n            '& .no-instance': {\n              fontSize: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: '100%',\n              fontWeight: '600',\n              letterSpacing: '-0.01em',\n              color: noInstanceColor,\n              textAlign: 'center',\n            },\n          },\n          '&-footer': {\n            boxShadow: `0 -4.75rem 3.0625rem -2.5625rem ${secondaryColor}`,\n            borderTop: `0.0625rem solid ${lightBorderColor}`,\n            paddingTop: '1rem',\n            position: 'relative',\n            zIndex: '2',\n            '& .MuiButton-contained': {\n              minHeight: '2.375rem',\n              padding: 0,\n              width: '100%',\n              '& .MuiButton-label': {\n                display: 'flex',\n              },\n            },\n            '& .support': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: '1rem',\n              paddingTop: '1rem',\n              height: '3.3125rem',\n              borderTop: `0.0625rem solid ${lightBorderColor}`,\n              '& p': {\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '0.75rem',\n                letterSpacing: '-0.01em',\n                color: vars.whiteColor,\n                fontWeight: '400',\n                '& img': {\n                  marginRight: '0.625rem',\n                },\n              },\n            },\n          },\n        },\n        '.content': {\n          backgroundColor: primaryBgColor,\n          flexGrow: 1,\n          borderRight: `.0625rem solid ${tabsBorderColor}`,\n          padding: '1rem',\n          '&:not(.full-round)': {\n            borderTopRightRadius: 0,\n            borderBottomRightRadius: 0,\n            borderRight: 'none',\n          },\n        },\n        '.MuiBox-empty': {\n          display: 'flex',\n          alignItems: 'center',\n          height: '100%',\n          justifyContent: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n          '& h3': {\n            marginBottom: '1.5rem',\n          },\n        },\n        '.uploaded-files': {\n          '&_row': {\n            background: whiteColor,\n            borderRadius: '.5rem',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '.5rem',\n            marginTop: '.5rem',\n            '&.error': {\n              '& .MuiLinearProgress-colorSecondary': {\n                backgroundColor: progressErrorBg,\n              },\n              '& p': {\n                color: errorColor,\n              },\n              '& strong': {\n                color: errorColor,\n              },\n            },\n            '& .wrap': {\n              padding: '0 0.9375rem',\n              flexGrow: '1',\n              display: 'flex',\n              justifyContent: 'space-between',\n              flexWrap: 'wrap',\n\n              '& .MuiLinearProgress-root': {\n                width: '100%',\n                marginTop: '.3125rem',\n              },\n\n              '& p': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarTextColor,\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                maxWidth: '6.25rem',\n              },\n              '& span': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: dropzoneTextColor,\n              },\n              '& strong': {\n                fontWeight: '600',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: barSuccessColor,\n              },\n            },\n            '& img': {\n              flexShrink: '0',\n            },\n          },\n          '& h3': {\n            fontWeight: '600',\n            fontSize: '.75rem',\n            lineHeight: '.875rem',\n            letterSpacing: '-0.01em',\n            marginBottom: '1rem',\n            color: dropzoneTextColor,\n          },\n        },\n\n        '.secondary-sidebar': {\n          width: '100%',\n          minHeight : '95vh',\n          display: 'flex',\n          flexShrink: 0,\n          flexDirection: 'column',\n          backgroundColor: whiteColor,\n          position: 'relative',\n          transition: 'all ease-in-out .3s',\n\n          '&:not(.in)': {\n            marginRight: '-18.75rem',\n            transition: 'all ease-in-out .3s',\n          },\n          '&_breadcrumb': {\n            padding: '1rem',\n            position: 'sticky',\n            top: 0,\n            zIndex: '5',\n            background: whiteColor,\n            '& .MuiBreadcrumbs-li': {\n              lineHeight: '1.5',\n              '& a': {\n                color: placeHolderColor,\n                cursor: 'pointer',\n                lineHeight: 'normal',\n              },\n            },\n            '& .MuiBreadcrumbs-separator': {\n              margin: '0 .5rem',\n            },\n          },\n          '&_body': {\n            flexGrow: 1,\n            maxHeight: 'calc(100vh - 13rem)',\n            height: 'auto',\n            overflow: 'auto',\n            paddingBottom: '1rem',\n          },\n          '&_footer': {\n            display: 'none',\n            height: '5rem',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'fixed',\n            right: '0',\n            bottom: '0',\n            width: '18.75rem',\n            background: `linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, ${whiteColor} 100%)`,\n            '& img': {\n              cursor: 'pointer',\n            },\n          },\n\n          '&.in': {\n            '& .secondary-sidebar_footer': {\n              display: 'flex',\n            },\n          },\n          '&::before': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            top: 0,\n            left: '-1.875rem',\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&::after': {\n            content: '\"\"',\n            background: whiteColor,\n            width: '1.875rem',\n            left: '-1.875rem',\n            bottom: 0,\n            height: '1.875rem',\n            position: 'absolute',\n            zIndex: -1,\n          },\n          '&_header': {\n            textAlign: 'center',\n            // padding: '1.5rem 1.5rem 2.25rem',\n            padding: '0 1rem 1rem',\n            borderBottom: `.0625rem solid ${tabsBorderColor}`,\n            '& .wrap': {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              // marginBottom: '2.25rem',\n              '& img': {\n                margin: '0',\n                cursor: 'pointer',\n              },\n            },\n            '& img': {\n              display: 'block',\n              margin: '0 auto',\n            },\n            '& h3': {\n              fontWeight: '600',\n              fontSize: '1.5rem',\n              lineHeight: '1.8125rem',\n              marginBottom: '.25rem',\n              marginTop: '.75rem',\n            },\n            '&> p ': {\n              fontWeight: '500',\n              fontSize: '.75rem',\n              lineHeight: '.875rem',\n              letterSpacing: '-0.01em',\n              color: placeHolderColor,\n            },\n          },\n\n          '& .tab-content': {\n            padding: '1rem 1rem',\n            '&+ .tab-content': {\n              borderTop: `.0625rem solid ${tabsBorderColor}`,\n            },\n            '& h3': {\n              fontSize: '1.125rem',\n              fontWeight: '500',\n              lineHeight: '1.375rem',\n              letterSpacing: '-0.03em',\n              color: primaryTextColor,\n              marginBottom: '1.3rem',\n            },\n            '& .tab-content-row': {\n              '& .chip-overflow': {\n                whiteSpace: 'nowrap',\n                overflow: 'auto',\n                marginRight: '-1rem',\n              },\n              '&> a': {\n                display: 'inline-flex',\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryColor,\n\n                '&:not(:last-child)': {\n                  marginRight: '.75rem',\n                },\n\n                '& img': {\n                  marginRight: '.25rem',\n                },\n              },\n              '&+ .tab-content-row': {\n                marginTop: '1rem',\n              },\n              '& label': {\n                fontWeight: '600',\n                display: 'block',\n                fontSize: '.75rem',\n                lineHeight: '.875rem',\n                letterSpacing: '-0.01em',\n                color: sideBarLabelColor,\n                '&+ p': {\n                  marginTop: '.25rem',\n                },\n              },\n              '&> p': {\n                fontSize: '.75rem',\n                lineHeight: '1rem',\n                color: primaryTextColor,\n                wordWrap: 'break-word',\n              },\n\n              '& .MuiList-root': {\n                padding: '0',\n                '& .MuiListItemText-root': {\n                  margin: '0',\n                  '&+ .MuiListItemText-root': {\n                    marginTop: '.5rem',\n                  },\n                  '&>span': {\n                    display: 'flex',\n                    '& label': {\n                      width: '9.5rem',\n                      paddingRight: '.5rem',\n                      '&+ p': {\n                        fontSize: '.75rem',\n                        lineHeight: '1rem',\n                        marginTop: '0',\n                        color: primaryTextColor,\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n        '.custom-chips': {\n          display: 'flex',\n          marginTop: '.25rem',\n          overflow: 'auto',\n          '&_col': {\n            display: ' flex',\n            flexShrink: 0,\n            background: primaryBgColor,\n            borderRadius: '.5rem',\n            padding: '.5rem .75rem 0.5rem 0.5rem',\n            '&:not(:last-child)': {\n              marginRight: '.5rem',\n            },\n            '& img': {\n              flexShrink: 0,\n              marginRight: '.25rem',\n            },\n            '& .wrap': {\n              whiteSpace: 'nowrap',\n              '& strong': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: primaryTextColor,\n              },\n              '& span': {\n                display: 'block',\n                lineHeight: '.875rem',\n                fontSize: '.75rem',\n                color: placeHolderColor,\n              },\n            },\n          },\n        },\n        '.graph-view': {\n          height: '100%',\n        },\n        '.graph-view_controls': {\n          width: '.75rem',\n          position: 'absolute',\n          bottom: '0',\n          zIndex: '100',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","export const ADD_DATASET = 'ADD_DATASET'\nexport const DELETE_DATASET = 'DELETE_DATASET'\nexport const SELECT_INSTANCE = 'SELECT_INSTANCE'\nexport const TRIGGER_ERROR = 'TRIGGER_ERROR'\n\nexport const addDataset = dataset => ({\n    type: ADD_DATASET,\n    data: { dataset: dataset },\n});\n\nexport const deleteDataset = dataset_id => ({\n    type: DELETE_DATASET,\n    data: { dataset_id: dataset_id },\n});\n\nexport const selectInstance = instance => ({\n    type: SELECT_INSTANCE,\n    data: {\n        dataset_id: instance.dataset_id,\n        graph_node: instance.graph_node,\n        tree_node: instance.tree_node,\n        source: instance.source\n    },\n});\n\nexport const triggerError = message => ({\n    type: TRIGGER_ERROR,\n    data: { error_message: message },\n});","import * as d3 from 'd3';\nimport Menu from '@material-ui/core/Menu';\nimport { IconButton } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useState, useEffect } from 'react';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { selectInstance } from '../../redux/actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport GeppettoGraphVisualization from '@metacell/geppetto-meta-ui/graph-visualization/Graph';\nimport { GRAPH_SOURCE } from '../../constants';\n\nconst NODE_FONT = '500 6px Inter, sans-serif';\nconst ONE_SECOND = 1000;\nconst LOADING_TIME = 3000;\nconst ZOOM_DEFAULT = 1;\nconst ZOOM_SENSITIVITY = 0.2;\nconst GRAPH_COLORS = {\n  link: '#CFD4DA',\n  linkHover : 'purple',\n  hoverRect: '#CFD4DA',\n  textHoverRect: '#3779E1',\n  textHover: 'white',\n  textColor: '#2E3A59',\n};\nconst TOP_DOWN = {\n  label : \"Top Down\",\n  layout : \"td\",\n  maxNodesLevel : (graph) => { \n    return graph.hierarchyVariant;\n  }\n};\nconst RADIAL_OUT = {\n  label : \"Radial\",\n  layout : \"null\",\n  maxNodesLevel : (graph) => { \n    return graph.radialVariant\n  }\n};\n\nconst roundRect = (ctx, x, y, width, height, radius, color, alpha) => {\n  if (width < 2 * radius) radius = width / 2;\n  if (height < 2 * radius) radius = height / 2;\n  ctx.globalAlpha = alpha || 1;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, radius);\n  ctx.arcTo(x + width, y + height, x, y + height, radius);\n  ctx.arcTo(x, y + height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n  ctx.fill();\n};\n\nconst GraphViewer = (props) => {\n  const dispatch = useDispatch();\n  const graphRef = React.useRef(null);\n  const [hoverNode, setHoverNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightNodes, setHighlightNodes] = useState(new Set());\n  const [highlightLinks, setHighlightLinks] = useState(new Set());\n  const [selectedLayout, setSelectedLayout] = React.useState(TOP_DOWN);\n  const [layoutAnchorEl, setLayoutAnchorEl] = React.useState(null);\n  const [resize, setResize] = useState({ width : \"100%\" , height : \"100%\" });\n  const [cameraPosition, setCameraPosition] = useState({ x : 0 , y : 0 });\n  const open = Boolean(layoutAnchorEl);\n  const [loading, setLoading] = React.useState(false);\n\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected.graph_node);\n  const layout = useSelector(state => state.sdsState.layout);\n\n  const handleLayoutClick = (event) => {\n    setLayoutAnchorEl(event.currentTarget);\n  };\n\n  const handleLayoutClose = () => {\n    setLayoutAnchorEl(null);\n  };\n\n  const handleLayoutChange = (target) => {\n    handleLayoutClose()\n    setSelectedLayout(target);\n  };\n\n  const handleNodeLeftClick = (node, event) => {\n    dispatch(selectInstance({\n      dataset_id: props.graph_id,\n      graph_node: node.id,\n      tree_node: node?.tree_reference?.id,\n      source: GRAPH_SOURCE\n    }));\n  };\n\n  const handleLinkColor = link => {\n    let linkColor = GRAPH_COLORS.link;\n    if ( highlightLinks.has(link) ) {\n      linkColor = highlightNodes.has(link.source) || highlightNodes.has(link.target) ? GRAPH_COLORS.linkHover : GRAPH_COLORS.link;\n    }\n\n    return linkColor;\n  };\n\n  /**\n   * Zoom to node when doing a right click on it\n   * @param {*} node \n   * @param {*} event \n   */\n  const handleNodeRightClick = (node, event) => {\n    graphRef?.current?.ggv?.current.centerAt(node.x, node.y, ONE_SECOND);\n    graphRef?.current?.ggv?.current.zoom(2, ONE_SECOND);\n    setCameraPosition({ x :  node.x , y :  node.y });\n  };\n\n\n  /**\n   * Zoom in\n   * @param {*} event \n   */\n  const zoomIn = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom + value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Zoom out\n   * @param {*} event\n   */\n  const zoomOut = (event) => {\n    let zoom = graphRef.current.ggv.current.zoom();\n    let value = ZOOM_DEFAULT;\n    if (zoom < 2) {\n      value = ZOOM_SENSITIVITY;\n    }\n    graphRef.current.ggv.current.zoom(zoom - value, ONE_SECOND / 10);\n  };\n\n\n  /**\n   * Reset camera position\n   */\n  const resetCamera = () => {\n    graphRef?.current?.ggv?.current.zoomToFit();\n    let center =  graphRef?.current?.ggv?.current.centerAt();\n    setCameraPosition({ x :  center.x , y :  center.y });\n  };\n\n  const onEngineStop = () => {\n    resetCamera();\n    setLoading(false);\n  }\n\n  // Check State updates triggered by Redux at a global level\n  if (nodeSelected && nodeSelected?.id !== selectedNode?.id) {\n    let node = graphRef?.current?.props?.data?.nodes.find( item => item.id === nodeSelected.id && item.parent?.id === nodeSelected.parent?.id );\n    if (node) {\n      setSelectedNode(node);\n      handleNodeRightClick(node, null);\n    }\n  } else if ((nodeSelected === null || nodeSelected === undefined) && (selectedNode !== null && selectedNode !== undefined)) {\n    setSelectedNode(null);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout ( () => setLoading(false) , LOADING_TIME);\n  }, []);\n\n\n  //Resume animation after component is updated, fixes issue with graphics going crazy.\n  useEffect(() => {\n    // selectedNode && handleNodeRightClick(selectedNode, null);\n    graphRef?.current?.ggv?.current.centerAt(cameraPosition.x, cameraPosition.y);\n    graphRef?.current?.ggv?.current.d3Force('collide', d3.forceCollide(4));\n    graphRef?.current?.ggv?.current.d3Force(\"manyBody\", d3.forceManyBody().strength(-100))\n  },[layout]);\n\n  const handleNodeHover = (node) => {\n    highlightNodes.clear();\n    highlightLinks.clear();\n    if (node) {\n      highlightNodes.add(node);\n      node.neighbors?.forEach(neighbor => highlightNodes.add(neighbor));\n      node.links?.forEach(link => highlightLinks.add(link));\n    }\n\n    setHoverNode(node);\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  };\n\n  const handleLinkHover = link => {\n    // Reset maps of hover nodes and links\n    highlightNodes.clear();\n    highlightLinks.clear();\n\n    // We found link being hovered\n    if (link) {\n      // Keep track of hovered link, and it's source/target node\n      highlightLinks.add(link);\n      highlightNodes.add(link.source);\n      highlightNodes.add(link.target);\n    }\n\n    setHighlightLinks(highlightLinks);\n    setHighlightNodes(highlightNodes);\n  }\n\n  const paintNode = React.useCallback(\n    (node, ctx) => {\n      const size = 10;\n      const nodeImageSize = [size * 2.4, size * 2.4];\n      const hoverRectDimensions = [size * 3.2, size * 3.2];\n      const hoverRectPosition = [node.x - 14, node.y - 14];\n      const textHoverPosition = [\n        hoverRectPosition[0],\n        hoverRectPosition[1] + hoverRectDimensions[1] + 2,\n      ];\n      const hoverRectBorderRadius = 2;\n      ctx.beginPath();\n\n      ctx.drawImage(\n        node.img,\n        node.x - size - 1,\n        node.y - size,\n        ...nodeImageSize\n      );\n      ctx.font = NODE_FONT;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      let nodeName = node.name;\n      if (nodeName.length > 10) {\n        nodeName = nodeName.substr(0, 10).concat('...');\n      }\n      const textProps = [nodeName, node.x + 2, textHoverPosition[1] + 4.5];\n      if (node === hoverNode) {\n        // image hover\n        roundRect(\n          ctx,\n          ...hoverRectPosition,\n          ...hoverRectDimensions,\n          hoverRectBorderRadius,\n          GRAPH_COLORS.hoverRec,\n          0.3\n        );\n        // text node name hover\n        roundRect(\n          ctx,\n          ...textHoverPosition,\n          hoverRectDimensions[0] + size / 2,\n          hoverRectDimensions[0] / 4,\n          hoverRectBorderRadius / 2,\n          GRAPH_COLORS.textHoverRect\n        );\n        // reset canvas fill color\n        ctx.fillStyle = GRAPH_COLORS.textHover;\n      } else {\n        ctx.fillStyle = GRAPH_COLORS.textColor;\n      }\n      ctx.fillText(...textProps);\n    },\n    [hoverNode]\n  );\n\n  let maxNodesLevel = selectedLayout.maxNodesLevel(window.datasets[props.graph_id].graph);\n  return (\n    <div className={'graph-view'}>\n      { loading?\n      <CircularProgress style={{\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0,\n        margin: 'auto',\n        color: \"#11bffe\",\n        size: \"55rem\"\n      }} />\n      :\n      <GeppettoGraphVisualization\n        ref={graphRef}\n        // Graph data with Nodes and Links to populate\n        data={window.datasets[props.graph_id].graph}\n        // Create the Graph as 2 Dimensional\n        d2={true}\n        warmupTicks={1000}\n        cooldownTicks={30}\n        onEngineStop={onEngineStop}\n        // Links properties\n        linkColor = {handleLinkColor}\n        linkWidth={2}\n        forceChargeStrength={maxNodesLevel * -20}\n        collideSize={5}\n        linkDirectionalParticles={1}\n        linkCurvature={link => {\n          let curve = 0;\n\n          if ( selectedLayout.layout !== RADIAL_OUT.layout ){\n            if ( link.source.fx > link.target.fx ) {\n              curve = curve * -1;\n            }\n            else if ( link.source.fx === link.target.fx ) {\n              curve = 0;\n            } else if ( link.source.fx >= link.target.fx ) {\n              curve = -.05;\n            } else {\n              curve = .05;\n            }\n          }\n\n          return curve;\n        }}\n        linkDirectionalParticleWidth={link => highlightLinks.has(link) ? 4 : 0}\n        linkCanvasObjectMode={'replace'}\n        onLinkHover={handleLinkHover}\n        // Override drawing of canvas objects, draw an image as a node\n        nodeCanvasObject={paintNode}\n        nodeCanvasObjectMode={node => 'replace'}\n        nodeVal = { node => {\n          if ( selectedLayout.layout !== RADIAL_OUT.layout ){\n            node.fx = node.xPos;\n            node.fy = 100 * node.level;\n          }\n        }}\n        onNodeHover={handleNodeHover}\n        // Allows updating link properties, as color and curvature. Without this, linkCurvature doesn't work.\n        onNodeClick={(node, event) => handleNodeLeftClick(node, event)}\n        onNodeRightClick={(node, event) => handleNodeRightClick(node, event)}\n        // td = Top Down, creates Graph with root at top\n        dagMode={selectedLayout.layout}\n        // Handles error on graph\n        onDagError={(loopNodeIds) => {}}\n        // Disable dragging of nodes\n        enableNodeDrag={false}\n        // Allow camera pan and zoom with mouse\n        enableZoomPanInteraction={true}\n        enablePointerInteraction={true}\n        // React element for controls goes here\n        controls={\n          <div className='graph-view_controls'>\n            <IconButton aria-controls=\"layout-menu\" aria-haspopup=\"true\" onClick={handleLayoutClick}>\n              <FormatAlignCenterIcon />\n            </IconButton>\n            <Menu\n              id=\"layout-menu\"\n              anchorEl={layoutAnchorEl}\n              keepMounted\n              open={open}\n              onClose={handleLayoutClose}\n            >\n              <MenuItem selected={RADIAL_OUT.layout === selectedLayout.layout} onClick={() => handleLayoutChange(RADIAL_OUT)}>{RADIAL_OUT.label}</MenuItem>\n              <MenuItem selected={TOP_DOWN.layout === selectedLayout.layout} onClick={() => handleLayoutChange(TOP_DOWN)}>{TOP_DOWN.label}</MenuItem>\n            </Menu>\n            <IconButton onClick={(e) => zoomIn()}>\n              <ZoomInIcon />\n            </IconButton>\n            <IconButton onClick={(e) => zoomOut()}>\n              <ZoomOutIcon />\n            </IconButton>\n            <IconButton onClick={(e) => resetCamera()}>\n              <RefreshIcon />\n            </IconButton>\n            <LayersIcon />\n          </div>\n        }\n      />\n    }\n    </div>\n  );\n};\n\nexport default GraphViewer;\n","export default __webpack_public_path__ + \"static/media/filter.335966db.svg\";","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport FILTER from '../../../images/filter.svg';\n\nconst NodeFooter = () => {\n  return (\n    <Box className='secondary-sidebar_footer'>\n      <img src={FILTER} alt='FILTER' />\n    </Box>\n  );\n};\n\nexport default NodeFooter;\n","export default __webpack_public_path__ + \"static/media/help.c1d19ba0.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HELP from \"../../../images/help.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.graph_node) {\n        title = node.graph_node.name;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = \"Unknown node\";\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={HELP} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/nifti.2c5dab4b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport FILE from \"../../../images/nifti.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst FileHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"nifti\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={FILE} alt=\"File\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default FileHeader;\n","export default __webpack_public_path__ + \"static/media/user.344027c3.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport PERSON from \"../../../images/user.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst PersonHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={PERSON} alt=\"Contributor\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default PersonHeader;\n","export default __webpack_public_path__ + \"static/media/dataset.6c3feae5.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport DATASET from \"../../../images/dataset.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst DatasetHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"dataset\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={DATASET} alt=\"dataset\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default DatasetHeader;\n","export default __webpack_public_path__ + \"static/media/volume.1008184b.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst ProtocolHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default ProtocolHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport VOLUME from \"../../../images/volume.svg\";\nimport vars from \"../../../styles/constant\";\n\nconst CollectionHeader = (props) => {\n    const { node } = props;\n    const headingStyle = {\n        color: vars[\"volume\"],\n        textTransform: 'capitalize'\n    }\n\n    let title = undefined;\n    if (node.tree_node && node.graph_node) {\n        title = node.tree_node.text;\n    } else if (node.tree_node) {\n        title = node.tree_node.text;\n    } else {\n        title = node.graph_node.name;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_header\">\n            <img src={VOLUME} alt=\"Volume\" />\n            <Typography component=\"h3\" style={headingStyle}>\n                {title}\n            </Typography>\n        </Box>\n    );\n};\n\nexport default CollectionHeader;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n} from \"@material-ui/core\";\n\nconst SimpleLabelValue = ({label, value, heading}) => {\n  return (\n    <>\n      { heading ? <Typography component=\"h3\">{heading}</Typography> : null }\n      <Box className=\"tab-content-row\">\n        <Typography component=\"label\">{label}</Typography>\n        <Typography>{value}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default SimpleLabelValue;","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst UnknownDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = \"Unknown node\";\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default UnknownDetails;","export default __webpack_public_path__ + \"static/media/link.2bbc9098.svg\";","import React from \"react\";\nimport {\n  Link\n} from \"@material-ui/core\";\nimport LINKICON from \"../../../../images/link.svg\";\n\nconst DetailLinks = ({href, title}) => {\n  return (\n    <Link href={href} target=\"_blank\">\n      <img src={LINKICON} alt={title} />\n      {title}\n    </Link>\n  )\n}\nexport default DetailLinks;\n","import React from \"react\";\nimport {\n  Box,\n  Chip\n} from \"@material-ui/core\";\n\nconst SimpleChip = ({chips}) => {\n  return (\n    <Box className=\"chip-overflow noscrollbar\">\n      { chips?.map((item, index) => <Chip key={`${item}_${index}`} label={item} /> ) }\n    </Box>\n  )\n}\nexport default SimpleChip;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst FileDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.tree_node?.timestamp_updated !== undefined) {\n        latestUpdate = new Date(node?.tree_node?.timestamp_updated.split(\",\")[0]);\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Type',\n            value: node?.tree_node?.type\n        },\n        {\n            title: 'Mimetype',\n            value: node?.tree_node?.mimetype\n        },\n        {\n            title: 'Size Bytes',\n            value: node?.tree_node?.size_bytes\n        }\n    ];\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} heading={'File Details'} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleChip chips={node?.graph_node?.attributes?.isAbout} />\n                </Box>\n                <SimpleLabelValue label={'Label'} value={title} />\n                { node?.tree_node?.uri_human !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Links href={node?.tree_node?.uri_human} title=\"Human URI\" />\n                       </Box>)\n                    : (<> </>)\n                }\n\n                { node?.tree_node?.checksums !== undefined\n                    ? (<>\n                            <SimpleLabelValue label={'Checksum'} value={node?.tree_node?.checksums[0].hex} />\n                            <SimpleLabelValue label={'Checksum Algorithm'} value={node?.tree_node?.checksums[0].cypher} />\n                        </>)\n                    : (<> </>)\n                }\n\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node?.graph_node?.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node?.graph_node?.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default FileDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst PersonDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node.basename;\n        idDetails = node.tree_node.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node.name;\n        idDetails = node.graph_node.id + detailsLabel;\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Name'} value={title.toString()} heading={'Contributor Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default PersonDetails;\n","import SimpleLabelValue from './Views/SimpleLabelValue';\n\nexport const iterateSimpleValue = (label, value) => {\n    if (value !== undefined) {\n        const results = value.map( (item, index) => {\n            return (<SimpleLabelValue key={label + \"_key_\" + index} label={label} value={value} />);\n        });\n        return results;\n    } else {\n        return (<> </>);\n    }\n}\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SampleDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label ? node.graph_node.attributes?.label[0] : \"\";\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined Sample name\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Sample Details'} />\n\n                { iterateSimpleValue('Assigned group', node?.graph_node?.attributes?.hasAssignedGroup) }\n                { <Box className=\"tab-content-row\">\n                    <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                  </Box>\n                }\n                { iterateSimpleValue('Digital artifact', node?.graph_node?.attributes?.hasDigitalArtifactThatIsAboutIt) }\n                { iterateSimpleValue('Participant in performance of', node?.graph_node?.attributes?.participantInPerformanceOf) }\n                { iterateSimpleValue('Derived from subject', node?.graph_node?.attributes?.wasDerivedFromSubject) }\n                { iterateSimpleValue('Extracted from Anatomical region', node?.graph_node?.attributes?.wasExtractedFromAnatomicalRegion) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SampleDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n    List,\n    ListItemText,\n} from \"@material-ui/core\";\nimport Links from './Views/Links';\nimport SimpleChip from './Views/SimpleChip';\nimport USER from \"../../../images/user.svg\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst DatasetDetails = (props) => {\n    const { node } = props;\n    const nodes = window.datasets[node.dataset_id].splinter.nodes;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.graph_node?.id + detailsLabel;\n        title = node?.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node?.tree_node?.basename;\n        idDetails = node?.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.graph_node?.id + detailsLabel;\n        title = node.graph_node?.attributes?.label[0];\n    }\n\n    let latestUpdate = \"Not defined.\"\n    if (node?.graph_node?.attributes?.latestUpdate !== undefined) {\n        latestUpdate = new Date(node.graph_node.attributes?.latestUpdate[0])\n    }\n\n    let contactPerson = [];\n    if (node.graph_node.attributes?.hasResponsiblePrincipalInvestigator !== undefined) {\n        node.graph_node.attributes?.hasResponsiblePrincipalInvestigator.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor.name,\n                designation: 'Principal Investigator',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    if (node.graph_node.attributes?.hasContactPerson !== undefined) {\n        node.graph_node.attributes?.hasContactPerson.map(user => {\n            const contributor = nodes.get(user);\n            contactPerson.push({\n                name: contributor.name,\n                designation: 'Contributor',\n                img: USER\n            });\n            return user;\n        });\n    }\n\n    const DETAILS_LIST = [\n        {\n            title: 'Error Index',\n            value: node.graph_node.attributes?.errorIndex\n        },\n        {\n            title: 'Template Schema Version',\n            value: node.graph_node.attributes?.hasDatasetTemplateSchemaVersion\n        },\n        {\n            title: 'Experiment Modality',\n            value: node.graph_node.attributes?.hasExperimentalModality\n        }\n    ];\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Updated On'} value={latestUpdate.toString()} heading={'Dataset Details'} />\n\n                <Box className=\"tab-content-row\">\n                    <Typography component=\"label\">About</Typography>\n                    <SimpleChip chips={node.graph_node.attributes?.isAbout} />\n                </Box>\n                <SimpleLabelValue label={'Label'} value={title} />\n                <Box className=\"tab-content-row\">\n                    <List component=\"nav\" aria-label=\"main\">\n                        {\n                            DETAILS_LIST?.map((item, index) => (\n                                <ListItemText key={`detail_list_${index}`}>\n                                    <Typography component=\"label\">{item?.title}</Typography>\n                                    <Typography>{item?.value}</Typography>\n                                </ListItemText>\n                            ))\n                        }\n                    </List>\n                </Box>\n\n                { node.graph_node.attributes?.hasUriHuman !== undefined\n                    ? (<Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Links</Typography>\n                            <Links key={`detail_links_dataset`} href={node.graph_node.attributes?.hasUriHuman[0]} title=\"Dataset\" />\n                            <Links key={`detail_protocol_technique`} href={node.graph_node.attributes?.protocolEmploysTechnique} title=\"Protocol Technique\" />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default DatasetDetails;\n","import React from \"react\";\nimport {\n    Box,\n    Typography,\n} from \"@material-ui/core\";\nimport SimpleChip from './Views/SimpleChip';\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport Links from './Views/Links';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst SubjectDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node.tree_node && node.graph_node) {\n        idDetails = node?.tree_node?.id + detailsLabel;\n        title = node?.tree_node?.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node?.graph_node?.id + detailsLabel;\n        title = node.graph_node.name;\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    }\n\n    const populateAttributeArray = (array, prop) => {\n        array = prop.map( item => {\n            return item;\n        })\n    }\n\n    let species = [];\n    let strains = [];\n    let assignedGroups = [];\n    if (node.graph_node?.attributes?.hasAssignedGroup !== undefined) {\n        populateAttributeArray(assignedGroups, node.graph_node.attributes.hasAssignedGroup);\n    }\n    if (node.graph_node?.attributes?.subjectSpecies !== undefined) {\n        populateAttributeArray(species, node.graph_node.attributes.subjectSpecies);\n    }\n    if (node.graph_node?.attributes?.subjectStrain !== undefined) {\n        populateAttributeArray(strains, node.graph_node.attributes.subjectStrain);\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Subject Details'} />\n\n                { iterateSimpleValue('Age', node?.graph_node?.attributes?.age) }\n                { iterateSimpleValue('Age Category', node?.graph_node?.attributes?.hasAgeCategory) }\n                { iterateSimpleValue('Biological Sex', node?.graph_node?.attributes?.biologicalSex) }\n                { <Box className=\"tab-content-row\">\n                    <Links href={node?.graph_node?.attributes?.hasDerivedInformationAsParticipant} title=\"Derived information as participant\" />\n                  </Box>\n                }\n                { <Box className=\"tab-content-row\">\n                    <Links href={node?.graph_node?.attributes?.participantInPerformanceOf} title=\"Participant in performance of\" />\n                  </Box>\n                }\n                { iterateSimpleValue('Specimen identifier', node?.graph_node?.attributes?.specimenHasIdentifier) }\n\n                { species.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Species</Typography>\n                            <SimpleChip chips={species} />\n                        </Box>)\n                    : <> </>\n                }\n                { strains.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Strains</Typography>\n                            <SimpleChip chips={strains} />\n                        </Box>)\n                    : <> </>\n                }\n                { assignedGroups.length > 0\n                    ? ( <Box className=\"tab-content-row\">\n                            <Typography component=\"label\">Assigned Groups</Typography>\n                            <SimpleChip chips={assignedGroups} />\n                        </Box>)\n                    : <> </>\n                }\n            </Box>\n        </Box>\n    );\n};\n\nexport default SubjectDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { iterateSimpleValue } from './utils';\nimport { detailsLabel } from '../../../constants';\n\nconst ProtocolDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = node.tree_node.basename;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.graph_node) {\n        idDetails = node.graph_node.id + detailsLabel;\n        title = node.graph_node.attributes?.label[0];\n    // the below is the case where we have data only from the graph\n    } else {\n        idDetails = node.tree_node.id + detailsLabel;\n        title = \"Undefined protocol\";\n    }\n\n    return (\n        <Box id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Protocol Details'} />\n                { iterateSimpleValue('Number of steps', node?.graph_node?.attributes?.protocolHasNumberOfSteps) }\n            </Box>\n        </Box>\n    );\n};\n\nexport default ProtocolDetails;\n","import React from \"react\";\nimport {\n    Box,\n} from \"@material-ui/core\";\nimport SimpleLabelValue from './Views/SimpleLabelValue';\nimport { detailsLabel } from '../../../constants';\n\nconst CollectionDetails = (props) => {\n    const { node } = props;\n\n    let title = \"\";\n    let idDetails = \"\";\n    // both tree and graph nodes are present, extract data from both\n    if (node?.tree_node && node?.graph_node) {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    // the below is the case where we have data only from the tree/hierarchy\n    } else if (node?.tree_node) {\n        title = node.tree_node?.basename;\n        idDetails = node.tree_node?.id + detailsLabel;\n    // the below is the case where we have data only from the graph\n    } else {\n        title = node.graph_node?.name;\n        idDetails = node.graph_node?.id + detailsLabel;\n    }\n\n    return (\n        <Box className=\"secondary-sidebar_body\" id={idDetails}>\n            <Box className=\"tab-content\">\n                <SimpleLabelValue label={'Label'} value={title} heading={'Collection Details'} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default CollectionDetails;\n","import { rdfTypes } from '../../utils/graphModel';\nimport NodeHeader from \"./Headers/Header\";\nimport FileHeader from './Headers/FileHeader';\nimport PersonHeader from './Headers/PersonHeader';\nimport DatasetHeader from './Headers/DatasetHeader';\nimport ProtocolHeader from './Headers/ProtocolHeader';\nimport CollectionHeader from \"./Headers/CollectionHeader\";\nimport Details from './Details/Details';\nimport FileDetails from './Details/FileDetails';\nimport PersonDetails from './Details/PersonDetails';\nimport SampleDetails from './Details/SampleDetails';\nimport DatasetDetails from './Details/DatasetDetails';\nimport SubjectDetails from './Details/SubjectDetails';\nimport ProtocolDetails from './Details/ProtocolDetails';\nimport CollectionDetails from './Details/CollectionDetails';\n\nvar DetailsFactory = function () {\n    this.createDetails = function (node) {\n        let details = null;\n        let type = undefined;\n        if (node.graph_node !== undefined && node.graph_node !== null) {\n            type = node.graph_node.type;\n        } else {\n            type = node.tree_node.type;\n        }\n        switch(type) {\n            case rdfTypes.Collection.key:\n                details = new Collection(node);\n                break;\n            case rdfTypes.Dataset.key:\n                details = new Dataset(node);\n                break;\n            case rdfTypes.Protocol.key:\n                details = new Protocol(node);\n                break;\n            case rdfTypes.Sample.key:\n                details = new Sample(node);\n                break;\n            case rdfTypes.Subject.key:\n                details = new Subject(node);\n                break;\n            case rdfTypes.File.key:\n                details = new File(node);\n                break;\n            case rdfTypes.Person.key:\n                details = new Person(node);\n                break;\n            default:\n                details = new Unknown(node);\n        }\n\n        return details;\n    }\n}\n\nconst Collection = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <CollectionDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <CollectionDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Dataset = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <DatasetDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <DatasetHeader node={node} />\n                <DatasetDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Protocol = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <ProtocolDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <ProtocolHeader node={node} />\n                <ProtocolDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Sample = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SampleDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SampleDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Subject = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <SubjectDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <CollectionHeader node={node} />\n                <SubjectDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst File = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <FileDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <FileHeader node={node} />\n                <FileDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Person = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <PersonDetails node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <PersonHeader node={node} />\n                <PersonDetails node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nconst Unknown = function (node) {\n    const nodeDetail = {\n        node: node\n    };\n    nodeDetail.getHeader = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getDetail = () => {\n        return (\n            <>\n                <Details node={node} />\n            </>\n        )\n    };\n\n    nodeDetail.getAll = () => {\n        return (\n            <>\n                <NodeHeader node={node} />\n                <Details node={node} />\n            </>\n        )\n    }\n    return nodeDetail;\n};\n\nexport default DetailsFactory;\n","export default __webpack_public_path__ + \"static/media/divider.8e18e6d1.svg\";","import React from 'react';\nimport DIVIDER from \"../../../../images/divider.svg\";\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { detailsLabel } from '../../../../constants';\n// import * as layoutActions from \"@metacell/geppetto-meta-client/common/layout/actions\";\n// import { useDispatch } from 'react-redux'\n\nconst HeaderBreadcrumbs = (props) => {\n  const { links } = props;\n  const goToLink = id => {\n    const divElement = document.getElementById(id + detailsLabel);\n    divElement.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <Box className=\"wrap\">\n      <Breadcrumbs\n        separator={<img src={DIVIDER} alt=\"DIVIDER\" />}\n        aria-label=\"breadcrumb\"\n      >\n        {\n          links && links.pages ? (\n            links?.pages?.map((page, index) => (\n              <Link color=\"inherit\" onClick={() => {goToLink(page.id)}} key={`breadcrumb_${page?.title}_${index}`}>\n                {page?.title}\n              </Link>\n            ))\n          ) : null\n        }\n        <Typography onClick={() => {goToLink(links?.current.id)}} color=\"textPrimary\">{links?.current.text}</Typography>\n      </Breadcrumbs>\n      {/* <img src={CLOSE} onClick={closeViewer} alt=\"Close\" /> */}\n    </Box>\n  );\n};\n\nexport default HeaderBreadcrumbs;\n","import GraphViewer from '../components/GraphViewer/GraphViewer'\nimport NodeDetailView from '../components/NodeDetailView/NodeDetailView';\n/**\n * Key of the component is the `component` attribute of the widgetConfiguration.\n * \n * This map is used inside the LayoutManager to know which component to display for a given widget.\n */\nconst componentMap = {\n    'graphComponent': GraphViewer,\n    'nodeView': NodeDetailView\n};\n\nexport default componentMap","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport NodeFooter from \"./Footers/Footer\";\nimport DetailsFactory from './factory';\nimport { useSelector } from 'react-redux'\nimport Breadcrumbs from \"./Details/Views/Breadcrumbs\";\nimport { subject_key, protocols_key, contributors_key } from '../../constants';\n\nconst NodeDetailView = (props) => {\n  var otherDetails = undefined;\n  const factory = new DetailsFactory();\n  const nodeSelected = useSelector(state => state.sdsState.instance_selected);\n  const nodeDetails = factory.createDetails(nodeSelected);\n  let links = {\n    pages: [],\n    current: {\n      id: undefined,\n      text: \"\"\n    }\n  };\n  var path = []\n  if (nodeSelected.tree_node !== undefined && nodeSelected.tree_node !== null) {\n    path = [...nodeSelected.tree_node.path]\n    path.shift();\n    otherDetails = path.reverse().map( singleNode => {\n      const tree_node = window.datasets[nodeSelected.dataset_id].splinter.tree_map.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: tree_node.graph_reference,\n        tree_node: tree_node\n      }\n      // I don't like the check on primary and derivative below since this depends on the data\n      // but it's coming as a feature request, so I guess it can stay there.\n      if (new_node.tree_node.id !== subject_key\n        && new_node.tree_node.id !== contributors_key\n        && new_node.tree_node.id !== protocols_key\n        && new_node.tree_node.basename !== 'primary'\n        && new_node.tree_node.basename !== 'derivative') {\n        links.pages.push({\n          id: singleNode,\n          title: tree_node.text,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.tree_node.id,\n      text: nodeSelected.tree_node.text\n    };\n  } else {\n    path = [];\n    var latestNodeVisited = nodeSelected;\n    while ( latestNodeVisited.graph_node.parent !== undefined ) {\n      path.push(latestNodeVisited.graph_node.parent.id);\n      latestNodeVisited = {\n        tree_node: undefined,\n        graph_node: latestNodeVisited.graph_node.parent\n      };\n    };\n\n    otherDetails = path.reverse().map( singleNode => {\n      const graph_node = window.datasets[nodeSelected.dataset_id].splinter.nodes.get(singleNode);\n      const new_node = {\n        dataset_id: nodeSelected.dataset_id,\n        graph_node: graph_node,\n        tree_node: graph_node.tree_reference\n      }\n      if (new_node.graph_node.id !== subject_key\n        && new_node.graph_node.id !== contributors_key\n        && new_node.graph_node.id !== protocols_key) {\n        links.pages.push({\n          id: singleNode,\n          title: graph_node.name,\n          href: '#'\n        });\n        return factory.createDetails(new_node).getDetail()\n      }\n      return <> </>;\n    });\n    links.current = {\n      id: nodeSelected.graph_node.id,\n      text: nodeSelected.graph_node.name\n    };\n  }\n\n  return (\n    <Box className={\"secondary-sidebar\" + (props.open ? \" in\" : \"\")}>\n      <Box className=\"secondary-sidebar_breadcrumb\">\n        <Breadcrumbs close={false} links={links} />\n      </Box>\n      { nodeDetails.getHeader() }\n      { otherDetails }\n      { nodeDetails.getDetail() }\n      <NodeFooter />\n    </Box>\n  );\n};\nexport default NodeDetailView;\n","import { createStore } from '@metacell/geppetto-meta-client/common';\nimport { layout as baseLayout } from '../app/layout';\nimport { sdsMiddleware } from './middleware'\nimport componentMap from '../app/componentMap';\nimport { sdsInitialState } from './initialState';\nimport sdsClientReducer from './initialState';\n\nconst reducers = {\n  \"sdsState\": sdsClientReducer\n}\n\n/**\n * The createStore function is used to initialize the redux store & configure the layout.\n * \n * You can build upon geppetto-meta's configuration by passing your own reducers, initial state and middlewares.\n */\nconst store = createStore(\n  reducers,\n  sdsInitialState,\n  [sdsMiddleware],\n  { baseLayout, componentMap }\n)\n\nexport default store;","import * as Actions from './actions';\nimport * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\n\nexport const sdsInitialState = {\n    \"sdsState\": {\n        datasets: [],\n        all_tree: [],\n        error_message: null,\n        instance_selected: {\n            dataset_id: null,\n            graph_node: null,\n            tree_node: null,\n            source: \"\"\n        },\n        layout : {}\n    }\n};\n\n\nexport default function sdsClientReducer(state = {}, action) {\n    switch (action.type) {\n        case Actions.SELECT_INSTANCE:\n            if (action.data !== undefined) {\n                const splinter = window.datasets[action.data.dataset_id].splinter;\n                const graph_node = splinter.nodes.get(action.data.graph_node);\n                const tree_node = splinter.tree_map.get(action.data.tree_node);\n                return {\n                    ...state,\n                    instance_selected: {\n                        dataset_id: action.data.dataset_id,\n                        graph_node: graph_node ? graph_node : null,\n                        tree_node: tree_node ? tree_node : null,\n                        source: action.data.source\n                    }\n                };\n            }\n            break;\n        case Actions.ADD_DATASET:\n            if (action.data !== undefined && !state.datasets.includes(action.data.dataset.id)) {\n                if (window.datasets === undefined) {\n                    window.datasets = {};\n                }\n                window.datasets[action.data.dataset.id] = {\n                    graph: action.data.dataset.graph,\n                    tree: action.data.dataset.tree,\n                    splinter: action.data.dataset.splinter\n                };\n                const ids = [...state.datasets, action.data.dataset.id]\n                return {\n                    ...state,\n                    datasets: ids,\n                    instance_selected: {\n                        dataset_id: action.data.dataset.id,\n                        graph_node: action.data.dataset.graph.nodes[0],\n                        tree_node: action.data.dataset.graph.nodes[0].tree_reference,\n                    }\n                };\n            } else {\n                return state;\n            }\n        case Actions.DELETE_DATASET:\n            if (action.data !== undefined) {\n                delete window.datasets[action.data.dataset_id];\n                const index = state.datasets.indexOf(action.data.dataset_id);\n                const ids = [...state.datasets.slice(0, index), ...state.datasets.slice(index + 1)]\n                return {\n                    ...state,\n                    datasets: ids,\n                };\n            }\n            break;\n        case Actions.TRIGGER_ERROR:\n            if (action.data.error_message !== undefined) {\n                return {\n                    ...state,\n                    error_message: action.data.error_message\n                };\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            return { ...state, layout : action.data.layout};\n        default:\n            return state;\n    }\n}\n","import * as LayoutActions from '@metacell/geppetto-meta-client/common/layout/actions';\nimport * as Actions from '../redux/actions';\n\n/**\n * Custom middleware, right now the actions below are just an example, this is just a scaffolding for later.\n */\nexport const sdsMiddleware = store => next => action => {\n    switch (action.type) {\n        case LayoutActions.layoutActions.REMOVE_WIDGET:\n            const id = action.data.id;\n            const state = store.getState();\n            if (state.sdsState.datasets.includes(id)) {\n                store.dispatch(Actions.deleteDataset(id))\n            }\n            break;\n        case LayoutActions.layoutActions.SET_LAYOUT:\n            break;\n        case Actions.ADD_DATASET:\n            break;\n        case Actions.DELETE_DATASET:\n            break;\n        case Actions.SELECT_INSTANCE:\n            break;\n        default:\n            break;\n    }\n\n    next(action);\n};\n","/**\n * The default layout of the application.\n *\n * Will be loaded by FlexLayout.\n */\nexport const layout = {\n    global: {\n        tabEnableClose: true,\n        tabSetHeaderHeight: 18,\n        tabSetTabStripHeight: 18,\n        enableEdgeDock: false,\n        sideBorders: 8,\n    },\n    // borders: [\n    //     {\n    //         type: \"border\",\n    //         location: \"bottom\",\n    //         size: 100,\n    //         children: [],\n    //         barSize: 18,\n    //     },\n    // ],\n    \"layout\": {\n        \"type\": \"tabset\",\n        \"weight\": 100,\n        \"id\": \"root\",\n        \"children\": [\n            {\n                \"type\": \"row\",\n                \"weight\": 70,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"leftPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"children\": []\n                    }\n                ]\n            },\n            {\n                \"type\": \"row\",\n                \"weight\": 30,\n                \"children\": [\n                    {\n                        \"type\": \"tabset\",\n                        \"weight\": 100,\n                        \"id\": \"rightPanel\",\n                        \"enableDeleteWhenEmpty\": false,\n                        \"enableDrop\": false,\n                        \"enableDrag\": false,\n                        \"enableDivide\": false,\n                        \"enableMaximize\": false,\n                        \"enableTabStrip\": false,\n                        \"tabStripHeight\": \"0px\",\n                        \"children\": []\n                    }\n                ]\n            }\n        ]\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const IMPORT_TEXT = 'Import a new dataset';\nexport const FILE_UPLOAD_PARAMS = {\n  acceptedFileExtensions: ['.json', '.ttl'],\n  maxFileSize: 5242880,\n  maxFiles: 6,\n};\nexport const NODES = [\"dataset\", \"nifti\", \"volume\", \"matlab\"];\n\nexport const detailsLabel = \"_details\";\n\nexport const subject_key = \"all_subjects\";\nexport const protocols_key = \"all_protocols\";\nexport const contributors_key = \"all_contributors\";\n\nexport const GRAPH_SOURCE = \"GRAPH\";\nexport const TREE_SOURCE = \"TREE\";\n"],"sourceRoot":""}